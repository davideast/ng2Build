{"version":3,"file":"/Users/deast/Angular/angular/modules/benchmarks/src/compiler/selector_benchmark.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","selector_benchmark.js","@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yIAAuC,UAAS,SAAQ;;ACAvE,AAAI,IAAA,CAAA,YAAW,2CAAoB,CAAC;;;;;;;;ACM7B,SAAS,KAAG,CAAC,AAAC;AACnB,AAAI,MAAA,CAAA,KAAI,EAAI,CAAA,eAAc,AAAC,CAAC,WAAU,CAAC,CAAC;AAExC,AAAI,MAAA,CAAA,YAAW,CAAC;AAChB,AAAI,MAAA,CAAA,oBAAmB,EAAI,GAAC,CAAC;AAC7B,AAAI,MAAA,CAAA,cAAa,EAAI,GAAC,CAAC;AACvB,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,MAAI,CAAG,CAAA,CAAA,EAAE,CAAG;AAC1B,gBAAU,KAAK,AAAC,CAAC,oBAAmB,CAAG,CAAA,cAAa,AAAC,EAAC,CAAC,CAAC;IAC1D;AAAA,AACA,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,MAAI,CAAG,CAAA,CAAA,EAAE,CAAG;AAC1B,gBAAU,KAAK,AAAC,CAAC,cAAa,CAAG,CAAA,WAAU,MAAM,AAAC,CAAC,oBAAmB,CAAE,CAAA,CAAC,CAAC,CAAC,CAAC;IAC9E;AAAA,AACA,eAAW,EAAI,IAAI,gBAAc,AAAC,EAAC,CAAC;AACpC,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,MAAI,CAAG,CAAA,CAAA,EAAE,CAAG;AAC1B,iBAAW,cAAc,AAAC,CAAC,cAAa,CAAE,CAAA,CAAC,CAAG,EAAA,CAAC,CAAC;IAClD;AAAA,AAEA,WAAS,MAAI,CAAC,AAAC,CAAE;AACf,AAAI,QAAA,CAAA,MAAK,EAAI,GAAC,CAAC;AACf,UAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,MAAI,CAAG,CAAA,CAAA,EAAE,CAAG;AAC1B,kBAAU,KAAK,AAAC,CAAC,MAAK,CAAG,CAAA,WAAU,MAAM,AAAC,CAAC,oBAAmB,CAAE,CAAA,CAAC,CAAC,CAAC,CAAC;MACtE;AAAA,AACA,WAAO,OAAK,CAAC;IACf;AAAA,AAEA,WAAS,cAAY,CAAC,AAAC,CAAE;AACvB,AAAI,QAAA,CAAA,OAAM,EAAI,IAAI,gBAAc,AAAC,EAAC,CAAC;AACnC,UAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,MAAI,CAAG,CAAA,CAAA,EAAE,CAAG;AAC1B,cAAM,cAAc,AAAC,CAAC,cAAa,CAAE,CAAA,CAAC,CAAG,EAAA,CAAC,CAAC;MAC7C;AAAA,AACA,WAAO,QAAM,CAAC;IAChB;AAAA,AAEA,WAAS,MAAI,CAAC,AAAC;AACb,AAAI,QAAA,CAAA,UAAS,EAAI,EAAA,CAAC;AAClB,UAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,MAAI,CAAG,CAAA,CAAA,EAAE,CAAG;AAC1B,mBAAW,MAAM,AAAC,CAAC,cAAa,CAAE,CAAA,CAAC,GAAG,SAAC,QAAO,CAAM;AAClD,mBAAS,GAAK,SAAO,CAAC;QACxB,EAAC,CAAC;MACJ;AAAA,AACA,WAAO,WAAS,CAAC;IACnB;AAEA,aAAS,AAAC,CAAC,QAAO,CAAG,MAAI,CAAC,CAAC;AAC3B,aAAS,AAAC,CAAC,gBAAe,CAAG,cAAY,CAAC,CAAC;AAC3C,aAAS,AAAC,CAAC,QAAO,CAAG,MAAI,CAAC,CAAC;EAC7B;AAEA,SAAS,eAAa,CAAC,AAAC,CAAE;AACxB,AAAI,MAAA,CAAA,GAAE,EAAI,CAAA,SAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;AACtB,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAG;AACtB,QAAE,GAAK,CAAA,GAAE,EAAE,CAAA,SAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;IACzB;AAAA,AACA,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAG;AACtB,QAAE,GAAK,CAAA,GAAE,EAAE,CAAA,SAAQ,AAAC,CAAC,CAAA,CAAC,CAAA,CAAE,IAAE,CAAA,CAAE,CAAA,SAAQ,AAAC,CAAC,CAAA,CAAC,CAAA,CAAE,IAAE,CAAC;IAC9C;AAAA,AACA,SAAO,IAAE,CAAC;EACZ;AAAA,AAEA,SAAS,UAAQ,CAAE,GAAE,CAAE;AACrB,AAAI,MAAA,CAAA,CAAA,EAAI,GAAC,CAAC;AACV,UAAO,CAAA,OAAO,EAAI,IAAE,CAAG;AACrB,MAAA,GAAK,CAAA,UAAS,AAAC,EAAC,CAAC;IACnB;AAAA,AACA,SAAO,EAAA,CAAC;EACV;AAAA,AAEA,SAAS,WAAS,CAAC,AAAC,CAAC;AACnB,AAAI,MAAA,CAAA,CAAA,EAAI,CAAA,SAAQ,AAAC,CAAC,EAAC,CAAC,CAAC;AACrB,OAAG,CAAA,EAAE,GAAC;AAAG,WAAO,CAAA,CAAA,SAAS,AAAC,EAAC,CAAC;AAAA,AAC5B,OAAG,CAAA,EAAE,GAAC;AAAG,WAAO,CAAA,aAAY,aAAa,AAAC,CAAC,CAAA,EAAE,GAAC,CAAC,CAAC;AAAA,AAChD,SAAO,CAAA,aAAY,aAAa,AAAC,CAAC,CAAA,EAAE,GAAC,CAAC,CAAC;EACzC;AAAA,AAEA,SAAS,UAAQ,CAAE,GAAE,CAAG;AACtB,SAAO,CAAA,IAAG,MAAM,AAAC,CAAC,IAAG,OAAO,AAAC,EAAC,CAAA,CAAI,IAAE,CAAC,CAAC;EACxC;ACjFQ,ADiFR,UCjFgB,AAAC,cAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,CAAA;ACAT,sBAAoB,EAAA,gBAAkB,CAAC;AAAvC,kBAAoB,EAAA,YAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA;ACAT,oBAAoB,EAAA,cAAkB,CAAC;AAAvC,WAAoB,EAAA,KAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA,CAAG;ACAZ,kBAAoB,EAAA,YAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA;ACAT,sBAAoB,EAAA,gBAAkB,CAAC;AAAvC,iBAAoB,EAAA,WAAkB,CAAC;IDE/B,CDDuB;AACzB,UAAM;IAAmB;EAC3B,CAAA;AJDI,CAAC,CAAC;AEiFV","sourceRoot":"/Users/deast/Angular/angular/modules/benchmarks/src/compiler/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {SelectorMatcher} from \"core/compiler/selector\";\nimport {CssSelector} from \"core/compiler/selector\";\nimport {StringWrapper, Math} from 'facade/lang';\nimport {ListWrapper} from 'facade/collection';\nimport {getIntParameter, bindAction} from 'e2e_test_lib/benchmark_util';\n\nexport function main() {\n  var count = getIntParameter('selectors');\n\n  var fixedMatcher;\n  var fixedSelectorStrings = [];\n  var fixedSelectors = [];\n  for (var i=0; i<count; i++) {\n    ListWrapper.push(fixedSelectorStrings, randomSelector());\n  }\n  for (var i=0; i<count; i++) {\n    ListWrapper.push(fixedSelectors, CssSelector.parse(fixedSelectorStrings[i]));\n  }\n  fixedMatcher = new SelectorMatcher();\n  for (var i=0; i<count; i++) {\n    fixedMatcher.addSelectable(fixedSelectors[i], i);\n  }\n\n  function parse() {\n    var result = [];\n    for (var i=0; i<count; i++) {\n      ListWrapper.push(result, CssSelector.parse(fixedSelectorStrings[i]));\n    }\n    return result;\n  }\n\n  function addSelectable() {\n    var matcher = new SelectorMatcher();\n    for (var i=0; i<count; i++) {\n      matcher.addSelectable(fixedSelectors[i], i);\n    }\n    return matcher;\n  }\n\n  function match() {\n    var matchCount = 0;\n    for (var i=0; i<count; i++) {\n      fixedMatcher.match(fixedSelectors[i], (selected) => {\n        matchCount += selected;\n      });\n    }\n    return matchCount;\n  }\n\n  bindAction('#parse', parse);\n  bindAction('#addSelectable', addSelectable);\n  bindAction('#match', match);\n}\n\nfunction randomSelector() {\n  var res = randomStr(5);\n  for (var i=0; i<3; i++) {\n    res += '.'+randomStr(5);\n  }\n  for (var i=0; i<3; i++) {\n    res += '['+randomStr(3)+'='+randomStr(6)+']';\n  }\n  return res;\n}\n\nfunction randomStr(len){\n  var s = '';\n  while (s.length < len) {\n    s += randomChar();\n  }\n  return s;\n}\n\nfunction randomChar(){\n  var n = randomNum(62);\n  if(n<10) return n.toString(); //1-10\n  if(n<36) return StringWrapper.fromCharCode(n+55); //A-Z\n  return StringWrapper.fromCharCode(n+61); //a-z\n}\n\nfunction randomNum(max) {\n  return Math.floor(Math.random() * max);\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;"]}