{"version":3,"file":"/Users/deast/Angular/angular/modules/change_detection/src/keyvalue_changes.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/14","keyvalue_changes.js","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/change_detection/src/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {ListWrapper, MapWrapper, StringMapWrapper} from 'facade/collection';\n\nimport {stringify, looseIdentical, isJsObject} from 'facade/lang';\n\nexport class KeyValueChanges {\n  _records:Map;\n  _map:any;\n\n  _mapHead:KVChangeRecord;\n  _previousMapHead:KVChangeRecord;\n  _changesHead:KVChangeRecord;\n  _changesTail:KVChangeRecord;\n  _additionsHead:KVChangeRecord;\n  _additionsTail:KVChangeRecord;\n  _removalsHead:KVChangeRecord;\n  _removalsTail:KVChangeRecord;\n\n  constructor() {\n    this._records = MapWrapper.create();\n    this._map = null;\n    this._mapHead = null;\n    this._previousMapHead = null;\n    this._changesHead = null;\n    this._changesTail = null;\n    this._additionsHead = null;\n    this._additionsTail = null;\n    this._removalsHead = null;\n    this._removalsTail = null;\n  }\n\n  static supports(obj):boolean {\n    return obj instanceof Map || isJsObject(obj);\n  }\n\n  get isDirty():boolean {\n    return this._additionsHead !== null ||\n           this._changesHead !== null ||\n           this._removalsHead !== null;\n  }\n\n  forEachItem(fn:Function) {\n    var record:KVChangeRecord;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachPreviousItem(fn:Function) {\n    var record:KVChangeRecord;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachChangedItem(fn:Function) {\n    var record:KVChangeRecord;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn:Function){\n    var record:KVChangeRecord;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn:Function){\n    var record:KVChangeRecord;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  check(map):boolean {\n    this._reset();\n    this._map = map;\n    var records = this._records;\n    var oldSeqRecord:KVChangeRecord = this._mapHead;\n    var lastOldSeqRecord:KVChangeRecord = null;\n    var lastNewSeqRecord:KVChangeRecord = null;\n    var seqChanged:boolean = false;\n\n    this._forEach(map, (value, key) => {\n      var newSeqRecord;\n      if (oldSeqRecord !== null && key === oldSeqRecord.key) {\n        newSeqRecord = oldSeqRecord;\n        if (!looseIdentical(value, oldSeqRecord._currentValue)) {\n          oldSeqRecord._previousValue = oldSeqRecord._currentValue;\n          oldSeqRecord._currentValue = value;\n          this._addToChanges(oldSeqRecord);\n        }\n      } else {\n        seqChanged = true;\n        if (oldSeqRecord !== null) {\n          oldSeqRecord._next = null;\n          this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n          this._addToRemovals(oldSeqRecord);\n        }\n        if (MapWrapper.contains(records, key)) {\n          newSeqRecord = MapWrapper.get(records, key);\n        } else {\n          newSeqRecord = new KVChangeRecord(key);\n          MapWrapper.set(records, key, newSeqRecord);\n          newSeqRecord._currentValue = value;\n          this._addToAdditions(newSeqRecord);\n        }\n      }\n\n      if (seqChanged) {\n        if (this._isInRemovals(newSeqRecord)) {\n          this._removeFromRemovals(newSeqRecord);\n        }\n        if (lastNewSeqRecord == null) {\n          this._mapHead = newSeqRecord;\n        } else {\n          lastNewSeqRecord._next = newSeqRecord;\n        }\n      }\n      lastOldSeqRecord = oldSeqRecord;\n      lastNewSeqRecord = newSeqRecord;\n      oldSeqRecord = oldSeqRecord === null ? null : oldSeqRecord._next;\n    });\n    this._truncate(lastOldSeqRecord, oldSeqRecord);\n    return this.isDirty;\n  }\n\n  _reset() {\n    if (this.isDirty) {\n      var record:KVChangeRecord;\n      // Record the state of the mapping\n      for (record = this._previousMapHead = this._mapHead;\n           record !== null;\n           record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record._previousValue = record._currentValue;\n      }\n\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record._previousValue = record._currentValue;\n      }\n\n      // todo(vicb) once assert is supported\n      //assert(() {\n      //  var r = _changesHead;\n      //  while (r != null) {\n      //    var nextRecord = r._nextChanged;\n      //    r._nextChanged = null;\n      //    r = nextRecord;\n      //  }\n      //\n      //  r = _additionsHead;\n      //  while (r != null) {\n      //    var nextRecord = r._nextAdded;\n      //    r._nextAdded = null;\n      //    r = nextRecord;\n      //  }\n      //\n      //  r = _removalsHead;\n      //  while (r != null) {\n      //    var nextRecord = r._nextRemoved;\n      //    r._nextRemoved = null;\n      //    r = nextRecord;\n      //  }\n      //\n      //  return true;\n      //});\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = this._removalsTail = null;\n    }\n  }\n\n  _truncate(lastRecord:KVChangeRecord, record:KVChangeRecord) {\n    while (record !== null) {\n      if (lastRecord === null) {\n        this._mapHead = null;\n      } else {\n        lastRecord._next = null;\n      }\n      var nextRecord = record._next;\n      // todo(vicb) assert\n      //assert((() {\n      //  record._next = null;\n      //  return true;\n      //}));\n      this._addToRemovals(record);\n      lastRecord = record;\n      record = nextRecord;\n    }\n\n    for (var rec:KVChangeRecord = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n      rec._previousValue = rec._currentValue;\n      rec._currentValue = null;\n      MapWrapper.delete(this._records, rec.key);\n    }\n  }\n\n  _isInRemovals(record:KVChangeRecord) {\n    return record === this._removalsHead ||\n           record._nextRemoved !== null ||\n           record._prevRemoved !== null;\n  }\n\n  _addToRemovals(record:KVChangeRecord) {\n    // todo(vicb) assert\n    //assert(record._next == null);\n    //assert(record._nextAdded == null);\n    //assert(record._nextChanged == null);\n    //assert(record._nextRemoved == null);\n    //assert(record._prevRemoved == null);\n    if (this._removalsHead === null) {\n      this._removalsHead = this._removalsTail = record;\n    } else {\n      this._removalsTail._nextRemoved = record;\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = record;\n    }\n  }\n\n  _removeFromSeq(prev:KVChangeRecord, record:KVChangeRecord) {\n    var next = record._next;\n    if (prev === null) {\n      this._mapHead = next;\n    } else {\n      prev._next = next;\n    }\n    // todo(vicb) assert\n    //assert((() {\n    //  record._next = null;\n    //  return true;\n    //})());\n  }\n\n  _removeFromRemovals(record:KVChangeRecord) {\n    // todo(vicb) assert\n    //assert(record._next == null);\n    //assert(record._nextAdded == null);\n    //assert(record._nextChanged == null);\n\n    var prev = record._prevRemoved;\n    var next = record._nextRemoved;\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n    record._prevRemoved = record._nextRemoved = null;\n  }\n\n  _addToAdditions(record:KVChangeRecord) {\n    // todo(vicb): assert\n    //assert(record._next == null);\n    //assert(record._nextAdded == null);\n    //assert(record._nextChanged == null);\n    //assert(record._nextRemoved == null);\n    //assert(record._prevRemoved == null);\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n\n  _addToChanges(record:KVChangeRecord) {\n    // todo(vicb) assert\n    //assert(record._nextAdded == null);\n    //assert(record._nextChanged == null);\n    //assert(record._nextRemoved == null);\n    //assert(record._prevRemoved == null);\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n\n  toString():string {\n    var items = [];\n    var previous = [];\n    var changes = [];\n    var additions = [];\n    var removals = [];\n    var record:KVChangeRecord;\n\n    for (record = this._mapHead; record !== null; record = record._next) {\n      ListWrapper.push(items, stringify(record));\n    }\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      ListWrapper.push(previous, stringify(record));\n    }\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      ListWrapper.push(changes, stringify(record));\n    }\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      ListWrapper.push(additions, stringify(record));\n    }\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      ListWrapper.push(removals, stringify(record));\n    }\n\n    return \"map: \" + items.join(', ') + \"\\n\" +\n           \"previous: \" + previous.join(', ') + \"\\n\" +\n           \"additions: \" + additions.join(', ') + \"\\n\" +\n           \"changes: \" + changes.join(', ') + \"\\n\" +\n           \"removals: \" + removals.join(', ') + \"\\n\";\n  }\n\n  _forEach(obj, fn:Function) {\n    if (obj instanceof Map) {\n      MapWrapper.forEach(obj, fn);\n    } else {\n      StringMapWrapper.forEach(obj, fn);\n    }\n  }\n}\n\n\n\nexport class KVChangeRecord {\n  key;\n  _previousValue;\n  _currentValue;\n\n  _nextPrevious:KVChangeRecord;\n  _next:KVChangeRecord;\n  _nextAdded:KVChangeRecord;\n  _nextRemoved:KVChangeRecord;\n  _prevRemoved:KVChangeRecord;\n  _nextChanged:KVChangeRecord;\n\n  constructor(key) {\n    this.key = key;\n    this._previousValue = null;\n    this._currentValue = null;\n\n    this._nextPrevious = null;\n    this._next = null;\n    this._nextAdded = null;\n    this._nextRemoved = null;\n    this._prevRemoved = null;\n    this._nextChanged = null;\n  }\n\n  toString():string {\n    return looseIdentical(this._previousValue, this._currentValue) ?\n      stringify(this.key) :\n      (stringify(this.key) + '[' + stringify(this._previousValue) + '->' +\n        stringify(this._currentValue) + ']');\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}