{"version":3,"file":"/Users/deast/Angular/angular/modules/change_detection/src/record.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","record.js","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/21","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/20"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/change_detection/src/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {ProtoRecordRange, RecordRange} from './record_range';\nimport {FIELD, isPresent, isBlank, int, StringWrapper, FunctionWrapper, BaseException} from 'facade/lang';\nimport {List, Map, ListWrapper, MapWrapper} from 'facade/collection';\nimport {ArrayChanges} from './array_changes';\nimport {KeyValueChanges} from './keyvalue_changes';\n\nvar _fresh = new Object();\n\nconst RECORD_TYPE_MASK = 0x000f;\nexport const RECORD_TYPE_CONST = 0x0000;\nexport const RECORD_TYPE_INVOKE_CLOSURE = 0x0001;\nexport const RECORD_TYPE_INVOKE_FORMATTER = 0x0002;\nexport const RECORD_TYPE_INVOKE_METHOD = 0x0003;\nexport const RECORD_TYPE_INVOKE_PURE_FUNCTION = 0x0004;\nconst RECORD_TYPE_ARRAY = 0x0005;\nconst RECORD_TYPE_KEY_VALUE = 0x0006;\nconst RECORD_TYPE_MARKER = 0x0007;\nexport const RECORD_TYPE_PROPERTY = 0x0008;\nconst RECORD_TYPE_NULL= 0x0009;\n\nconst RECORD_FLAG_DISABLED = 0x0100;\nexport const RECORD_FLAG_IMPLICIT_RECEIVER = 0x0200;\nexport const RECORD_FLAG_COLLECTION = 0x0400;\n\n/**\n * For now we are dropping expression coalescence. We can always add it later, but\n * real world numbers show that it does not provide significant benefits.\n */\nexport class ProtoRecord {\n  recordRange:ProtoRecordRange;\n  _mode:int;\n  context:any;\n  funcOrValue:any;\n  arity:int;\n  name:string;\n  dest:any;\n  groupMemento:any;\n  expressionAsString:string;\n\n  next:ProtoRecord;\n\n  recordInConstruction:Record;\n\n  constructor(recordRange:ProtoRecordRange,\n              mode:int,\n              funcOrValue,\n              arity:int,\n              name:string,\n              dest,\n              groupMemento,\n              expressionAsString:string) {\n\n    this.recordRange = recordRange;\n    this._mode = mode;\n    this.funcOrValue = funcOrValue;\n    this.arity = arity;\n    this.name = name;\n    this.dest = dest;\n    this.groupMemento = groupMemento;\n    this.expressionAsString = expressionAsString;\n\n    this.next = null;\n    // The concrete Record instantiated from this ProtoRecord\n    this.recordInConstruction = null;\n  }\n\n  setIsImplicitReceiver() {\n    this._mode |= RECORD_FLAG_IMPLICIT_RECEIVER;\n  }\n}\n\n\n/**\n * Represents a Record for keeping track of changes. A change is a difference between previous\n * and current value.\n *\n * By default changes are detected using dirty checking, but a notifier can be present which can\n * notify the records of changes by means other than dirty checking. For example Object.observe\n * or events on DOM elements.\n *\n * DESIGN NOTES:\n *  - No inheritance allowed so that code is monomorphic for performance.\n *  - Atomic watch operations\n *  - Defaults to dirty checking\n *  - Keep this object as lean as possible. (Lean in number of fields)\n */\nexport class Record {\n  recordRange:RecordRange;\n  protoRecord:ProtoRecord;\n  next:Record;\n  prev:Record;\n\n  /// This reference can change.\n  nextEnabled:Record;\n\n  /// This reference can change.\n  prevEnabled:Record;\n\n  previousValue;\n  currentValue;\n\n  _mode:int;\n  context;\n  funcOrValue;\n  args:List;\n\n  // Opaque data which will be the target of notification.\n  // If the object is instance of Record, then it it is directly processed\n  // Otherwise it is the context used by ChangeDispatcher.\n  dest;\n\n  constructor(recordRange:RecordRange, protoRecord:ProtoRecord, formatters:Map) {\n    this.recordRange = recordRange;\n    this.protoRecord = protoRecord;\n\n    this.next = null;\n    this.prev = null;\n    this.nextEnabled = null;\n    this.prevEnabled = null;\n    this.dest = null;\n\n    this.previousValue = null;\n\n    this.context = null;\n    this.funcOrValue = null;\n    this.args = null;\n\n    if (isBlank(protoRecord)) {\n      this._mode = RECORD_TYPE_MARKER | RECORD_FLAG_DISABLED;\n      return;\n    }\n\n    this._mode = protoRecord._mode;\n\n    // Return early for collections, further init delayed until updateContext()\n    if (this.isCollection()) return;\n\n    this.currentValue = _fresh;\n\n    var type = this.getType();\n\n    if (type === RECORD_TYPE_CONST) {\n      this.funcOrValue = protoRecord.funcOrValue;\n\n    } else if (type === RECORD_TYPE_INVOKE_PURE_FUNCTION) {\n      this.funcOrValue = protoRecord.funcOrValue;\n      this.args = ListWrapper.createFixedSize(protoRecord.arity);\n\n    } else if (type === RECORD_TYPE_INVOKE_FORMATTER) {\n      this.funcOrValue = MapWrapper.get(formatters, protoRecord.funcOrValue);\n      this.args = ListWrapper.createFixedSize(protoRecord.arity);\n\n    } else if (type === RECORD_TYPE_INVOKE_METHOD) {\n      this.funcOrValue = protoRecord.funcOrValue;\n      this.args = ListWrapper.createFixedSize(protoRecord.arity);\n\n    } else if (type === RECORD_TYPE_INVOKE_CLOSURE) {\n      this.args = ListWrapper.createFixedSize(protoRecord.arity);\n\n    } else if (type === RECORD_TYPE_PROPERTY) {\n      this.funcOrValue = protoRecord.funcOrValue;\n    }\n  }\n\n  // getters & setters perform much worse on some browsers\n  // see http://jsperf.com/vicb-getter-vs-function\n  getType():int {\n    return this._mode & RECORD_TYPE_MASK;\n  }\n\n  setType(value:int) {\n    this._mode = (this._mode & ~RECORD_TYPE_MASK) | value;\n  }\n\n  isDisabled():boolean {\n    return (this._mode & RECORD_FLAG_DISABLED) === RECORD_FLAG_DISABLED;\n  }\n\n  isEnabled():boolean {\n    return !this.isDisabled();\n  }\n\n  _setDisabled(value:boolean) {\n    if (value) {\n      this._mode |= RECORD_FLAG_DISABLED;\n    } else {\n      this._mode &= ~RECORD_FLAG_DISABLED;\n    }\n  }\n\n  enable() {\n    if (this.isEnabled()) return;\n\n    var prevEnabled = this.findPrevEnabled();\n    var nextEnabled = this.findNextEnabled();\n\n    this.prevEnabled = prevEnabled;\n    this.nextEnabled = nextEnabled;\n\n    if (isPresent(prevEnabled)) prevEnabled.nextEnabled = this;\n    if (isPresent(nextEnabled)) nextEnabled.prevEnabled = this;\n\n    this._setDisabled(false);\n  }\n\n  disable() {\n    var prevEnabled = this.prevEnabled;\n    var nextEnabled = this.nextEnabled;\n\n    if (isPresent(prevEnabled)) prevEnabled.nextEnabled = nextEnabled;\n    if (isPresent(nextEnabled)) nextEnabled.prevEnabled = prevEnabled;\n\n    this._setDisabled(true);\n  }\n\n  isImplicitReceiver():boolean {\n    return (this._mode & RECORD_FLAG_IMPLICIT_RECEIVER) === RECORD_FLAG_IMPLICIT_RECEIVER;\n  }\n\n  isCollection():boolean {\n    return (this._mode & RECORD_FLAG_COLLECTION) === RECORD_FLAG_COLLECTION;\n  }\n\n  static createMarker(rr:RecordRange):Record {\n    return new Record(rr, null, null);\n  }\n\n  check():boolean {\n    if (this.isCollection()) {\n      return this._checkCollection();\n    } else {\n      return this._checkSingleRecord();\n    }\n  }\n\n  _checkSingleRecord():boolean {\n    this.previousValue = this.currentValue;\n    this.currentValue = this._calculateNewValue();\n    if (isSame(this.previousValue, this.currentValue)) return false;\n    this._updateDestination();\n    return true;\n  }\n\n  _updateDestination() {\n    if (this.dest instanceof Record) {\n      if (isPresent(this.protoRecord.dest.position)) {\n        this.dest.updateArg(this.currentValue, this.protoRecord.dest.position);\n      } else {\n        this.dest.updateContext(this.currentValue);\n      }\n    }\n  }\n\n  // return whether the content has changed\n  _checkCollection():boolean {\n    switch(this.getType()) {\n      case RECORD_TYPE_KEY_VALUE:\n        var kvChangeDetector:KeyValueChanges = this.currentValue;\n        return kvChangeDetector.check(this.context);\n\n      case RECORD_TYPE_ARRAY:\n        var arrayChangeDetector:ArrayChanges = this.currentValue;\n        return arrayChangeDetector.check(this.context);\n\n      case RECORD_TYPE_NULL:\n        // no need to check the content again unless the context changes\n        this.disable();\n        this.currentValue = null;\n        return true;\n\n      default:\n        throw new BaseException(`Unsupported record type (${this.getType()})`);\n    }\n  }\n\n  _calculateNewValue() {\n    try {\n      return this.__calculateNewValue();\n    } catch (e) {\n      throw new ChangeDetectionError(this, e);\n    }\n  }\n\n  __calculateNewValue() {\n    switch (this.getType()) {\n      case RECORD_TYPE_PROPERTY:\n        var propertyGetter:Function = this.funcOrValue;\n        return propertyGetter(this.context);\n\n      case RECORD_TYPE_INVOKE_METHOD:\n        var methodInvoker:Function = this.funcOrValue;\n        return methodInvoker(this.context, this.args);\n\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return FunctionWrapper.apply(this.context, this.args);\n\n      case RECORD_TYPE_INVOKE_PURE_FUNCTION:\n      case RECORD_TYPE_INVOKE_FORMATTER:\n        this.disable();\n        return FunctionWrapper.apply(this.funcOrValue, this.args);\n\n      case RECORD_TYPE_CONST:\n        this.disable();\n        return this.funcOrValue;\n\n      default:\n        throw new BaseException(`Unsupported record type (${this.getType()})`);\n    }\n  }\n\n  updateArg(value, position:int) {\n    this.args[position] = value;\n    this.enable();\n  }\n\n  updateContext(value) {\n    this.context = value;\n    this.enable();\n\n    if (this.isCollection()) {\n      if (ArrayChanges.supports(value)) {\n        if (this.getType() != RECORD_TYPE_ARRAY) {\n          this.setType(RECORD_TYPE_ARRAY);\n          this.currentValue = new ArrayChanges();\n        }\n        return;\n      }\n\n      if (KeyValueChanges.supports(value)) {\n        if (this.getType() != RECORD_TYPE_KEY_VALUE) {\n          this.setType(RECORD_TYPE_KEY_VALUE);\n          this.currentValue = new KeyValueChanges();\n        }\n        return;\n      }\n\n      if (isBlank(value)) {\n        this.setType(RECORD_TYPE_NULL);\n      } else {\n        throw new BaseException(\"Collection records must be array like, map like or null\");\n      }\n    }\n  }\n\n  terminatesExpression():boolean {\n    return !(this.dest instanceof Record);\n  }\n\n  isMarkerRecord():boolean {\n    return this.getType() == RECORD_TYPE_MARKER;\n  }\n\n  expressionMemento() {\n    return this.protoRecord.dest;\n  }\n\n  expressionAsString() {\n    return this.protoRecord.expressionAsString;\n  }\n\n  groupMemento() {\n    return isPresent(this.protoRecord) ? this.protoRecord.groupMemento : null;\n  }\n\n\n  /**\n   * Returns the next enabled record. This search is not limited to the current range.\n   *\n   * [H ER1 T] [H ER2 T] _nextEnable(ER1) will return ER2\n   *\n   * The function skips disabled ranges.\n   */\n  findNextEnabled() {\n    if (this.isEnabled()) return this.nextEnabled;\n\n    var record = this.next;\n    while (isPresent(record) && record.isDisabled()) {\n      if (record.isMarkerRecord() && record.recordRange.disabled) {\n        record = record.recordRange.tailRecord.next;\n      } else {\n        record = record.next;\n      }\n    }\n    return record;\n  }\n\n  /**\n   * Returns the prev enabled record. This search is not limited to the current range.\n   *\n   * [H ER1 T] [H ER2 T] _nextEnable(ER2) will return ER1\n   *\n   * The function skips disabled ranges.\n   */\n  findPrevEnabled() {\n    if (this.isEnabled()) return this.prevEnabled;\n\n    var record = this.prev;\n    while (isPresent(record) && record.isDisabled()) {\n      if (record.isMarkerRecord() && record.recordRange.disabled) {\n        record = record.recordRange.headRecord.prev;\n      } else {\n        record = record.prev;\n      }\n    }\n    return record;\n  }\n\n  inspect() {\n    return _inspect(this);\n  }\n\n  inspectRange() {\n    return this.recordRange.inspect();\n  }\n}\n\nfunction _inspect(record:Record) {\n  function mode() {\n    switch (record.getType()) {\n      case RECORD_TYPE_PROPERTY:\n        return \"property\";\n      case RECORD_TYPE_INVOKE_METHOD:\n        return \"invoke_method\";\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return \"invoke_closure\";\n      case RECORD_TYPE_INVOKE_PURE_FUNCTION:\n        return \"pure_function\";\n      case RECORD_TYPE_INVOKE_FORMATTER:\n        return \"invoke_formatter\";\n      case RECORD_TYPE_CONST:\n        return \"const\";\n      case RECORD_TYPE_KEY_VALUE:\n        return \"key_value\";\n      case RECORD_TYPE_ARRAY:\n        return \"array\";\n      case RECORD_TYPE_NULL:\n        return \"null\";\n      case RECORD_TYPE_MARKER:\n        return \"marker\";\n      default:\n        return \"unexpected type!\";\n    }\n  }\n\n  function disabled() {\n    return record.isDisabled() ? \"disabled\" : \"enabled\";\n  }\n\n  function description() {\n    var name = isPresent(record.protoRecord) ? record.protoRecord.name : \"\";\n    var exp = isPresent(record.protoRecord) ? record.protoRecord.expressionAsString : \"\";\n    var currValue = record.currentValue;\n    var context = record.context;\n\n    return `${mode()}, ${name}, ${disabled()} ` +\n      ` Current: ${currValue}, Context: ${context} in [${exp}]`;\n  }\n\n  if (isBlank(record)) return null;\n  if (!(record instanceof Record)) return record;\n\n  return new _RecordInspect(description(), record);\n}\n\nclass _RecordInspect {\n  description:string;\n  record:Record;\n\n  constructor(description:string,record:Record) {\n    this.description = description;\n    this.record = record;\n  }\n\n  get next() {\n    return _inspect(this.record.next);\n  }\n  get nextEnabled() {\n    return _inspect(this.record.nextEnabled);\n  }\n  get dest() {\n    return _inspect(this.record.dest);\n  }\n}\n\nfunction isSame(a, b) {\n  if (a === b) return true;\n  if ((a !== a) && (b !== b)) return true;\n  return false;\n}\n\nexport class ChangeDetectionError extends Error {\n  message:string;\n  originalException:any;\n  location:string;\n\n  constructor(record:Record, originalException:any) {\n    this.originalException = originalException;\n    this.location = record.protoRecord.expressionAsString;\n    this.message = `${this.originalException} in [${this.location}]`;\n  }\n\n  toString():string {\n    return this.message;\n  }\n}\n","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","$__export($__placeholder__0, $__placeholder__1)","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$traceurRuntime.type.$__placeholder__0)","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)"]}