{"version":3,"file":"/Users/deast/Angular/angular/modules/change_detection/src/record_range.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","record_range.js","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/change_detection/src/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {\n  ProtoRecord,\n  Record,\n  RECORD_FLAG_COLLECTION,\n  RECORD_FLAG_IMPLICIT_RECEIVER,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_INVOKE_FORMATTER,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_INVOKE_PURE_FUNCTION,\n  RECORD_TYPE_PROPERTY\n} from './record';\n\nimport {FIELD, IMPLEMENTS, isBlank, isPresent, int, autoConvertAdd, BaseException,\n  NumberWrapper} from 'facade/lang';\nimport {List, Map, ListWrapper, MapWrapper, StringMapWrapper} from 'facade/collection';\nimport {ContextWithVariableBindings} from './parser/context_with_variable_bindings';\nimport {\n  AccessMember,\n  Assignment,\n  AST,\n  AstVisitor,\n  Binary,\n  Chain,\n  Collection,\n  Conditional,\n  Formatter,\n  FunctionCall,\n  ImplicitReceiver,\n  KeyedAccess,\n  LiteralArray,\n  LiteralMap,\n  LiteralPrimitive,\n  MethodCall,\n  PrefixNot\n} from './parser/ast';\n\nexport class ProtoRecordRange {\n  recordCreator: ProtoRecordCreator;\n  constructor() {\n    this.recordCreator = null;\n  }\n\n  /**\n   * Parses [ast] into [ProtoRecord]s and adds them to [ProtoRecordRange].\n   *\n   * @param astWithSource The expression to watch\n   * @param expressionMemento an opaque object which will be passed to ChangeDispatcher on\n   *        detecting a change.\n   * @param groupMemento\n   * @param content Whether to watch collection content (true) or reference (false, default)\n   */\n  addRecordsFromAST(ast:AST,\n        expressionMemento,\n        groupMemento,\n        content:boolean = false)\n  {\n    if (this.recordCreator === null) {\n      this.recordCreator = new ProtoRecordCreator(this);\n    }\n\n    if (content) {\n      ast = new Collection(ast);\n    }\n    this.recordCreator.createRecordsFromAST(ast, expressionMemento, groupMemento);\n  }\n\n  // TODO(rado): the type annotation should be dispatcher:ChangeDispatcher.\n  // but @Implements is not ready yet.\n  instantiate(dispatcher, formatters:Map):RecordRange {\n    var recordRange:RecordRange = new RecordRange(this, dispatcher);\n    if (this.recordCreator !== null) {\n      this._createRecords(recordRange, formatters);\n      this._setDestination();\n    }\n    return recordRange;\n  }\n\n  _createRecords(recordRange:RecordRange, formatters:Map) {\n    for (var proto = this.recordCreator.headRecord; proto != null; proto = proto.next) {\n      var record = new Record(recordRange, proto, formatters);\n      proto.recordInConstruction = record;\n      recordRange.addRecord(record);\n    }\n  }\n\n  _setDestination() {\n    for (var proto = this.recordCreator.headRecord; proto != null; proto = proto.next) {\n      if (proto.dest instanceof Destination) {\n        proto.recordInConstruction.dest = proto.dest.record.recordInConstruction;\n      } else {\n        proto.recordInConstruction.dest = proto.dest;\n      }\n      proto.recordInConstruction = null;\n    }\n  }\n}\n\nexport class RecordRange {\n  protoRecordRange:ProtoRecordRange;\n  dispatcher:any; //ChangeDispatcher\n  headRecord:Record;\n  tailRecord:Record;\n  disabled:boolean;\n  // TODO(rado): the type annotation should be dispatcher:ChangeDispatcher.\n  // but @Implements is not ready yet.\n  constructor(protoRecordRange:ProtoRecordRange, dispatcher) {\n    this.protoRecordRange = protoRecordRange;\n    this.dispatcher = dispatcher;\n\n    this.disabled = false;\n\n    this.headRecord = Record.createMarker(this);\n    this.tailRecord = Record.createMarker(this);\n\n    _link(this.headRecord, this.tailRecord);\n  }\n\n  /// addRecord assumes that the record is newly created, so it is enabled.\n  addRecord(record:Record) {\n    var lastRecord = this.tailRecord.prev;\n\n    _link(lastRecord, record);\n    if (!lastRecord.isDisabled()) {\n      _linkEnabled(lastRecord, record);\n    }\n    _link(record, this.tailRecord);\n  }\n\n  addRange(child:RecordRange) {\n    var lastRecord = this.tailRecord.prev;\n    var prevEnabledRecord = this.tailRecord.findPrevEnabled();\n    var nextEnabledRerord = this.tailRecord.findNextEnabled();\n\n    var firstEnabledChildRecord = child.findFirstEnabledRecord();\n    var lastEnabledChildRecord = child.findLastEnabledRecord();\n\n    _link(lastRecord, child.headRecord);\n    _link(child.tailRecord, this.tailRecord);\n\n    if (isPresent(prevEnabledRecord) && isPresent(firstEnabledChildRecord)) {\n      _linkEnabled(prevEnabledRecord, firstEnabledChildRecord);\n    }\n\n    if (isPresent(nextEnabledRerord) && isPresent(lastEnabledChildRecord)) {\n      _linkEnabled(lastEnabledChildRecord, nextEnabledRerord);\n    }\n  }\n\n  remove() {\n    var firstEnabledChildRecord = this.findFirstEnabledRecord();\n    var next = this.tailRecord.next;\n    var prev = this.headRecord.prev;\n\n    _link(prev, next);\n\n    if (isPresent(firstEnabledChildRecord)) {\n      var lastEnabledChildRecord = this.findLastEnabledRecord();\n      var nextEnabled = lastEnabledChildRecord.nextEnabled;\n      var prevEnabled = firstEnabledChildRecord.prevEnabled;\n      if (isPresent(nextEnabled)) nextEnabled.prevEnabled = prevEnabled;\n      if (isPresent(prevEnabled)) prevEnabled.nextEnabled = nextEnabled;\n    }\n  }\n\n  disable() {\n    var firstEnabledChildRecord = this.findFirstEnabledRecord();\n    if (isPresent(firstEnabledChildRecord)) {\n      // There could be a last enabled record only if first enabled exists\n      var lastEnabledChildRecord = this.findLastEnabledRecord();\n      var nextEnabled = lastEnabledChildRecord.nextEnabled;\n      var prevEnabled = firstEnabledChildRecord.prevEnabled;\n      if (isPresent(nextEnabled)) nextEnabled.prevEnabled = prevEnabled;\n      if (isPresent(prevEnabled)) prevEnabled.nextEnabled = nextEnabled;\n    }\n\n    this.disabled = true;\n  }\n\n  enable() {\n    var prevEnabledRecord = this.headRecord.findPrevEnabled();\n    var nextEnabledRecord = this.tailRecord.findNextEnabled();\n\n    var firstEnabledthisRecord = this.findFirstEnabledRecord();\n    var lastEnabledthisRecord = this.findLastEnabledRecord();\n\n    if (isPresent(firstEnabledthisRecord) && isPresent(prevEnabledRecord)){\n      _linkEnabled(prevEnabledRecord, firstEnabledthisRecord);\n    }\n\n    if (isPresent(lastEnabledthisRecord) && isPresent(nextEnabledRecord)){\n      _linkEnabled(lastEnabledthisRecord, nextEnabledRecord);\n    }\n\n    this.disabled = false;\n  }\n\n  /**\n   * Returns the first enabled record in the current range.\n   *\n   * [H ER1 ER2 R3 T] returns ER1\n   * [H R1 ER2 R3 T] returns ER2\n   *\n   * If no enabled records, returns null.\n   *\n   * [H R1 R2 R3 T] returns null\n   *\n   * The function skips disabled sub ranges.\n   */\n  findFirstEnabledRecord() {\n    var record = this.headRecord.next;\n    while (record !== this.tailRecord && record.isDisabled()) {\n      if (record.isMarkerRecord() && record.recordRange.disabled) {\n        record = record.recordRange.tailRecord.next;\n      } else {\n        record = record.next;\n      }\n    }\n    return record === this.tailRecord ? null : record;\n  }\n\n  /**\n   * Returns the last enabled record in the current range.\n   *\n   * [H ER1 ER2 R3 T] returns ER2\n   * [H R1 ER2 R3 T] returns ER2\n   *\n   * If no enabled records, returns null.\n   *\n   * [H R1 R2 R3 T] returns null\n   *\n   * The function skips disabled sub ranges.\n   */\n  findLastEnabledRecord() {\n    var record = this.tailRecord.prev;\n    while (record !== this.headRecord && record.isDisabled()) {\n      if (record.isMarkerRecord() && record.recordRange.disabled) {\n        record = record.recordRange.headRecord.prev;\n      } else {\n        record = record.prev;\n      }\n    }\n    return record === this.headRecord ? null : record;\n  }\n\n  /**\n   * Sets the context (the object) on which the change detection expressions will\n   * dereference themselves on. Since the RecordRange can be reused the context\n   * can be re-set many times during the lifetime of the RecordRange.\n   *\n   * @param context the new context for change detection for the current RecordRange\n   */\n  setContext(context) {\n    for (var record:Record = this.headRecord;\n         record != null;\n         record = record.next) {\n\n      if (record.isImplicitReceiver()) {\n        this._setContextForRecord(context, record);\n      }\n    }\n  }\n\n  _setContextForRecord(context, record:Record) {\n    var proto = record.protoRecord;\n\n    while (context instanceof ContextWithVariableBindings) {\n      if (context.hasBinding(proto.name)) {\n        this._setVarBindingGetter(context, record, proto);\n        return;\n      }\n      context = context.parent;\n    }\n\n    this._setRegularGetter(context, record, proto);\n  }\n\n  _setVarBindingGetter(context, record:Record, proto:ProtoRecord) {\n    record.funcOrValue = _mapGetter(proto.name);\n    record.updateContext(context.varBindings);\n  }\n\n  _setRegularGetter(context, record:Record, proto:ProtoRecord) {\n    record.funcOrValue = proto.funcOrValue;\n    record.updateContext(context);\n  }\n\n  inspect() {\n    return _inspect(this);\n  }\n}\n\nfunction _inspect(recordRange:RecordRange) {\n  var res = [];\n  for(var r = recordRange.headRecord.next; r != recordRange.tailRecord; r = r.next){\n    ListWrapper.push(res, r.inspect().description);\n  }\n  return res;\n}\n\nfunction _link(a:Record, b:Record) {\n  a.next = b;\n  b.prev = a;\n}\n\nfunction _linkEnabled(a:Record, b:Record) {\n  a.nextEnabled = b;\n  b.prevEnabled = a;\n}\n\nexport class ChangeDispatcher {\n  onRecordChange(groupMemento, records:List<Record>) {}\n}\n\n//todo: vsavkin: Create Array and Context destinations?\nclass Destination {\n  record:ProtoRecord;\n  position:int;\n  constructor(record:ProtoRecord, position:int) {\n    this.record = record;\n    this.position = position;\n  }\n}\n\n\n@IMPLEMENTS(AstVisitor)\nclass ProtoRecordCreator {\n  protoRecordRange:ProtoRecordRange;\n  headRecord:ProtoRecord;\n  tailRecord:ProtoRecord;\n  groupMemento:any;\n  expressionAsString:string;\n\n  constructor(protoRecordRange) {\n    this.protoRecordRange = protoRecordRange;\n    this.headRecord = null;\n    this.tailRecord = null;\n    this.expressionAsString = null;\n  }\n\n  visitImplicitReceiver(ast:ImplicitReceiver, args) {\n    throw new BaseException('Should never visit an implicit receiver');\n  }\n\n  visitLiteralPrimitive(ast:LiteralPrimitive, dest) {\n    this.add(this.construct(RECORD_TYPE_CONST, ast.value, 0, null, dest));\n  }\n\n  visitBinary(ast:Binary, dest) {\n    var record = this.construct(RECORD_TYPE_INVOKE_PURE_FUNCTION,\n                                _operationToFunction(ast.operation), 2, ast.operation, dest);\n    ast.left.visit(this, new Destination(record, 0));\n    ast.right.visit(this, new Destination(record, 1));\n    this.add(record);\n  }\n\n  visitPrefixNot(ast:PrefixNot, dest) {\n    var record = this.construct(RECORD_TYPE_INVOKE_PURE_FUNCTION, _operation_negate, 1, \"-\", dest);\n    ast.expression.visit(this, new Destination(record, 0));\n    this.add(record);\n  }\n\n  visitAccessMember(ast:AccessMember, dest) {\n    var record = this.construct(RECORD_TYPE_PROPERTY, ast.getter, 0, ast.name, dest);\n    if (ast.receiver instanceof ImplicitReceiver) {\n      record.setIsImplicitReceiver();\n    } else {\n      ast.receiver.visit(this, new Destination(record, null));\n    }\n    this.add(record);\n  }\n\n  visitFormatter(ast:Formatter, dest) {\n    var record = this.construct(RECORD_TYPE_INVOKE_FORMATTER, ast.name, ast.allArgs.length, ast.name, dest);\n    for (var i = 0; i < ast.allArgs.length; ++i) {\n      ast.allArgs[i].visit(this, new Destination(record, i));\n    }\n    this.add(record);\n  }\n\n  visitMethodCall(ast:MethodCall, dest) {\n    var record = this.construct(RECORD_TYPE_INVOKE_METHOD, ast.fn, ast.args.length, ast.name, dest);\n    for (var i = 0; i < ast.args.length; ++i) {\n      ast.args[i].visit(this, new Destination(record, i));\n    }\n    if (ast.receiver instanceof ImplicitReceiver) {\n      record.setIsImplicitReceiver();\n    } else {\n      ast.receiver.visit(this, new Destination(record, null));\n    }\n    this.add(record);\n  }\n\n  visitFunctionCall(ast:FunctionCall, dest) {\n    var record = this.construct(RECORD_TYPE_INVOKE_CLOSURE, null, ast.args.length, null, dest);\n    ast.target.visit(this, new Destination(record, null));\n    for (var i = 0; i < ast.args.length; ++i) {\n      ast.args[i].visit(this, new Destination(record, i));\n    }\n    this.add(record);\n  }\n\n  visitCollection(ast: Collection, dest) {\n    var record = this.construct(RECORD_FLAG_COLLECTION, null, null, null, dest);\n    ast.value.visit(this, new Destination(record, null));\n    this.add(record);\n  }\n\n  visitConditional(ast:Conditional, dest) {\n    var record = this.construct(RECORD_TYPE_INVOKE_PURE_FUNCTION, _cond, 3, \"?:\", dest);\n    ast.condition.visit(this, new Destination(record, 0));\n    ast.trueExp.visit(this, new Destination(record, 1));\n    ast.falseExp.visit(this, new Destination(record, 2));\n    this.add(record);\n  }\n\n  visitKeyedAccess(ast:KeyedAccess, dest) {\n    var record = this.construct(RECORD_TYPE_INVOKE_METHOD, _keyedAccess, 1, \"[]\", dest);\n    ast.obj.visit(this, new Destination(record, null));\n    ast.key.visit(this, new Destination(record, 0));\n    this.add(record);\n  }\n\n  visitLiteralArray(ast:LiteralArray, dest) {\n    var length = ast.expressions.length;\n    var record = this.construct(RECORD_TYPE_INVOKE_PURE_FUNCTION, _arrayFn(length), length, \"Array()\", dest);\n    for (var i = 0; i < length; ++i) {\n      ast.expressions[i].visit(this, new Destination(record, i));\n    }\n    this.add(record);\n  }\n\n  visitLiteralMap(ast:LiteralMap, dest) {\n    var length = ast.values.length;\n    var record = this.construct(RECORD_TYPE_INVOKE_PURE_FUNCTION, _mapFn(ast.keys, length), length, \"Map()\", dest);\n    for (var i = 0; i < length; ++i) {\n      ast.values[i].visit(this, new Destination(record, i));\n    }\n    this.add(record);\n  }\n\n  visitChain(ast:Chain, dest){this._unsupported();}\n\n  visitAssignment(ast:Assignment, dest) {this._unsupported();}\n\n  visitTemplateBindings(ast, dest) {this._unsupported();}\n\n  createRecordsFromAST(ast:AST, expressionMemento:any, groupMemento:any){\n    this.groupMemento = groupMemento;\n    this.expressionAsString = ast.toString();\n    ast.visit(this, expressionMemento);\n  }\n\n  construct(recordType, funcOrValue, arity, name, dest) {\n    return new ProtoRecord(this.protoRecordRange, recordType, funcOrValue, arity,\n        name, dest, this.groupMemento, this.expressionAsString);\n  }\n\n  add(protoRecord:ProtoRecord) {\n    if (this.headRecord === null) {\n      this.headRecord = this.tailRecord = protoRecord;\n    } else {\n      this.tailRecord.next = protoRecord;\n      this.tailRecord = protoRecord;\n    }\n  }\n\n  _unsupported() {\n    throw new BaseException(\"Unsupported\");\n  }\n}\n\n\nfunction _operationToFunction(operation:string):Function {\n  switch(operation) {\n    case '+'  : return _operation_add;\n    case '-'  : return _operation_subtract;\n    case '*'  : return _operation_multiply;\n    case '/'  : return _operation_divide;\n    case '%'  : return _operation_remainder;\n    case '==' : return _operation_equals;\n    case '!=' : return _operation_not_equals;\n    case '<'  : return _operation_less_then;\n    case '>'  : return _operation_greater_then;\n    case '<=' : return _operation_less_or_equals_then;\n    case '>=' : return _operation_greater_or_equals_then;\n    case '&&' : return _operation_logical_and;\n    case '||' : return _operation_logical_or;\n    default: throw new BaseException(`Unsupported operation ${operation}`);\n  }\n}\n\nfunction _operation_negate(value)                       {return !value;}\nfunction _operation_add(left, right)                    {return left + right;}\nfunction _operation_subtract(left, right)               {return left - right;}\nfunction _operation_multiply(left, right)               {return left * right;}\nfunction _operation_divide(left, right)                 {return left / right;}\nfunction _operation_remainder(left, right)              {return left % right;}\nfunction _operation_equals(left, right)                 {return left == right;}\nfunction _operation_not_equals(left, right)             {return left != right;}\nfunction _operation_less_then(left, right)              {return left < right;}\nfunction _operation_greater_then(left, right)           {return left > right;}\nfunction _operation_less_or_equals_then(left, right)    {return left <= right;}\nfunction _operation_greater_or_equals_then(left, right) {return left >= right;}\nfunction _operation_logical_and(left, right)            {return left && right;}\nfunction _operation_logical_or(left, right)             {return left || right;}\nfunction _cond(cond, trueVal, falseVal)                 {return cond ? trueVal : falseVal;}\n\nfunction _arrayFn(length:int) {\n  switch (length) {\n    case 0: return () => [];\n    case 1: return (a1) => [a1];\n    case 2: return (a1, a2) => [a1, a2];\n    case 3: return (a1, a2, a3) => [a1, a2, a3];\n    case 4: return (a1, a2, a3, a4) => [a1, a2, a3, a4];\n    case 5: return (a1, a2, a3, a4, a5) => [a1, a2, a3, a4, a5];\n    case 6: return (a1, a2, a3, a4, a5, a6) => [a1, a2, a3, a4, a5, a6];\n    case 7: return (a1, a2, a3, a4, a5, a6, a7) => [a1, a2, a3, a4, a5, a6, a7];\n    case 8: return (a1, a2, a3, a4, a5, a6, a7, a8) => [a1, a2, a3, a4, a5, a6, a7, a8];\n    case 9: return (a1, a2, a3, a4, a5, a6, a7, a8, a9) => [a1, a2, a3, a4, a5, a6, a7, a8, a9];\n    default: throw new BaseException(`Does not support literal arrays with more than 9 elements`);\n  }\n}\n\nfunction _mapFn(keys:List, length:int) {\n  function buildMap(values) {\n    var res = StringMapWrapper.create();\n    for(var i = 0; i < keys.length; ++i) {\n      StringMapWrapper.set(res, keys[i], values[i]);\n    }\n    return res;\n  }\n\n  switch (length) {\n    case 0: return () => [];\n    case 1: return (a1) => buildMap([a1]);\n    case 2: return (a1, a2) => buildMap([a1, a2]);\n    case 3: return (a1, a2, a3) => buildMap([a1, a2, a3]);\n    case 4: return (a1, a2, a3, a4) => buildMap([a1, a2, a3, a4]);\n    case 5: return (a1, a2, a3, a4, a5) => buildMap([a1, a2, a3, a4, a5]);\n    case 6: return (a1, a2, a3, a4, a5, a6) => buildMap([a1, a2, a3, a4, a5, a6]);\n    case 7: return (a1, a2, a3, a4, a5, a6, a7) => buildMap([a1, a2, a3, a4, a5, a6, a7]);\n    case 8: return (a1, a2, a3, a4, a5, a6, a7, a8) => buildMap([a1, a2, a3, a4, a5, a6, a7, a8]);\n    case 9: return (a1, a2, a3, a4, a5, a6, a7, a8, a9) => buildMap([a1, a2, a3, a4, a5, a6, a7, a8, a9]);\n    default: throw new BaseException(`Does not support literal maps with more than 9 elements`);\n  }\n}\n\n//TODO: cache the getters\nfunction _mapGetter(key) {\n  return function(map) {\n    return MapWrapper.get(map, key);\n  }\n}\n\nfunction _keyedAccess(obj, args) {\n  return obj[args[0]];\n}\n","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$traceurRuntime.type.$__placeholder__0)","$__placeholder__0 = $__placeholder__1"]}