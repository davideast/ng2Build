{"version":3,"file":"/Users/deast/Angular/angular/modules/change_detection/test/change_detector_spec.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","change_detector_spec.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/20"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/change_detection/test/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {ddescribe, describe, it, iit, xit, expect, beforeEach} from 'test_lib/test_lib';\n\nimport {isPresent, isBlank, isJsObject, BaseException} from 'facade/lang';\nimport {List, ListWrapper, MapWrapper} from 'facade/collection';\n\nimport {Parser} from 'change_detection/parser/parser';\nimport {Lexer} from 'change_detection/parser/lexer';\nimport {ContextWithVariableBindings} from 'change_detection/parser/context_with_variable_bindings';\nimport {arrayChangesAsString, kvChangesAsString} from './util';\n\nimport {\n  ChangeDetector,\n  ProtoRecordRange,\n  RecordRange,\n  ChangeDispatcher,\n  ProtoRecord,\n  ChangeDetectionError\n} from 'change_detection/change_detector';\n\nimport {Record} from 'change_detection/record';\n\nexport function main() {\n  function ast(exp:string, location:string = 'location') {\n    var parser = new Parser(new Lexer());\n    return parser.parseBinding(exp, location);\n  }\n\n  function createChangeDetector(memo:string, exp:string, context = null, formatters = null,\n                                content = false) {\n    var prr = new ProtoRecordRange();\n    prr.addRecordsFromAST(ast(exp), memo, memo, content);\n\n    var dispatcher = new TestDispatcher();\n    var rr = prr.instantiate(dispatcher, formatters);\n    rr.setContext(context);\n\n    var cd = new ChangeDetector(rr);\n\n    return {\"changeDetector\" : cd, \"dispatcher\" : dispatcher};\n  }\n\n  function executeWatch(memo:string, exp:string, context = null, formatters = null,\n                        content = false) {\n    var res = createChangeDetector(memo, exp, context, formatters, content);\n    res[\"changeDetector\"].detectChanges();\n    return res[\"dispatcher\"].log;\n  }\n\n  describe('change_detection', () => {\n    describe('ChangeDetection', () => {\n      function createRange(dispatcher, ast, group) {\n        var prr = new ProtoRecordRange();\n        prr.addRecordsFromAST(ast, \"memo\", group);\n        return prr.instantiate(dispatcher, null);\n      }\n\n      function detectChangesInRange(recordRange) {\n        var cd = new ChangeDetector(recordRange);\n        cd.detectChanges();\n      }\n\n      it('should do simple watching', () => {\n        var person = new Person(\"misko\");\n\n        var c = createChangeDetector('name', 'name', person);\n        var cd = c[\"changeDetector\"];\n        var dispatcher = c[\"dispatcher\"];\n\n        cd.detectChanges();\n        expect(dispatcher.log).toEqual(['name=misko']);\n\n        dispatcher.clear();\n        cd.detectChanges();\n        expect(dispatcher.log).toEqual([]);\n\n        person.name = \"Misko\";\n        cd.detectChanges();\n        expect(dispatcher.log).toEqual(['name=Misko']);\n      });\n\n      it('should support chained properties', () => {\n        var address = new Address('Grenoble');\n        var person = new Person('Victor', address);\n\n        expect(executeWatch('address.city', 'address.city', person))\n              .toEqual(['address.city=Grenoble']);\n      });\n\n      it(\"should support method calls\", () => {\n        var person = new Person('Victor');\n        expect(executeWatch('m', 'sayHi(\"Jim\")', person)).toEqual(['m=Hi, Jim']);\n      });\n\n      it(\"should support function calls\", () => {\n        var td = new TestData(() => (a) => a);\n        expect(executeWatch('value', 'a()(99)', td)).toEqual(['value=99']);\n      });\n\n      it(\"should support chained method calls\", () => {\n        var person = new Person('Victor');\n        var td = new TestData(person);\n        expect(executeWatch('m', 'a.sayHi(\"Jim\")', td)).toEqual(['m=Hi, Jim']);\n      });\n\n      it(\"should support literals\", () => {\n        expect(executeWatch('const', '10')).toEqual(['const=10']);\n        expect(executeWatch('const', '\"str\"')).toEqual(['const=str']);\n      });\n\n      it(\"should support literal array\", () => {\n        var c = createChangeDetector('array', '[1,2]');\n        c[\"changeDetector\"].detectChanges();\n        expect(c[\"dispatcher\"].loggedValues).toEqual([[[1,2]]]);\n\n        c = createChangeDetector('array', '[1,a]', new TestData(2));\n        c[\"changeDetector\"].detectChanges();\n        expect(c[\"dispatcher\"].loggedValues).toEqual([[[1,2]]]);\n      });\n\n      it(\"should support literal maps\", () => {\n        var c = createChangeDetector('map', '{z:1}');\n        c[\"changeDetector\"].detectChanges();\n        expect(c[\"dispatcher\"].loggedValues[0][0]['z']).toEqual(1);\n\n        c = createChangeDetector('map', '{z:a}', new TestData(1));\n        c[\"changeDetector\"].detectChanges();\n        expect(c[\"dispatcher\"].loggedValues[0][0]['z']).toEqual(1);\n      });\n\n      it(\"should support binary operations\", () => {\n        expect(executeWatch('exp', '10 + 2')).toEqual(['exp=12']);\n        expect(executeWatch('exp', '10 - 2')).toEqual(['exp=8']);\n\n        expect(executeWatch('exp', '10 * 2')).toEqual(['exp=20']);\n        expect(executeWatch('exp', '10 / 2')).toEqual([`exp=${5.0}`]); //dart exp=5.0, js exp=5\n        expect(executeWatch('exp', '11 % 2')).toEqual(['exp=1']);\n\n        expect(executeWatch('exp', '1 == 1')).toEqual(['exp=true']);\n        expect(executeWatch('exp', '1 != 1')).toEqual(['exp=false']);\n\n        expect(executeWatch('exp', '1 < 2')).toEqual(['exp=true']);\n        expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n\n        expect(executeWatch('exp', '2 > 1')).toEqual(['exp=true']);\n        expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n\n        expect(executeWatch('exp', '1 <= 2')).toEqual(['exp=true']);\n        expect(executeWatch('exp', '2 <= 2')).toEqual(['exp=true']);\n        expect(executeWatch('exp', '2 <= 1')).toEqual(['exp=false']);\n\n        expect(executeWatch('exp', '2 >= 1')).toEqual(['exp=true']);\n        expect(executeWatch('exp', '2 >= 2')).toEqual(['exp=true']);\n        expect(executeWatch('exp', '1 >= 2')).toEqual(['exp=false']);\n\n        expect(executeWatch('exp', 'true && true')).toEqual(['exp=true']);\n        expect(executeWatch('exp', 'true && false')).toEqual(['exp=false']);\n\n        expect(executeWatch('exp', 'true || false')).toEqual(['exp=true']);\n        expect(executeWatch('exp', 'false || false')).toEqual(['exp=false']);\n      });\n\n      it(\"should support negate\", () => {\n        expect(executeWatch('exp', '!true')).toEqual(['exp=false']);\n        expect(executeWatch('exp', '!!true')).toEqual(['exp=true']);\n      });\n\n      it(\"should support conditionals\", () => {\n        expect(executeWatch('m', '1 < 2 ? 1 : 2')).toEqual(['m=1']);\n        expect(executeWatch('m', '1 > 2 ? 1 : 2')).toEqual(['m=2']);\n      });\n\n      describe(\"keyed access\", () => {\n        it(\"should support accessing a list item\", () => {\n          expect(executeWatch('array[0]', '[\"foo\", \"bar\"][0]')).toEqual(['array[0]=foo']);\n        });\n        it(\"should support accessing a map item\", () => {\n          expect(executeWatch('map[foo]', '{\"foo\": \"bar\"}[\"foo\"]')).toEqual(['map[foo]=bar']);\n        });\n      });\n\n      describe(\"formatters\", () => {\n        it(\"should support formatters\", () => {\n          var formatters = MapWrapper.createFromPairs([\n            ['uppercase', (v) => v.toUpperCase()],\n            ['wrap', (v, before, after) => `${before}${v}${after}`]]);\n          expect(executeWatch('str', '\"aBc\" | uppercase', null, formatters)).toEqual(['str=ABC']);\n          expect(executeWatch('str', '\"b\" | wrap:\"a\":\"c\"', null, formatters)).toEqual(['str=abc']);\n        });\n\n        it(\"should rerun formatters only when arguments change\", () => {\n          var counter = 0;\n          var formatters = MapWrapper.createFromPairs([\n            ['formatter', (_) => {counter += 1; return 'value'}]\n          ]);\n\n          var person = new Person('Jim');\n\n          var c = createChangeDetector('formatter', 'name | formatter', person, formatters);\n          var cd = c['changeDetector'];\n\n          cd.detectChanges();\n          expect(counter).toEqual(1);\n\n          cd.detectChanges();\n          expect(counter).toEqual(1);\n\n          person.name = 'bob';\n          cd.detectChanges();\n          expect(counter).toEqual(2);\n        });\n      });\n\n\n      describe(\"ContextWithVariableBindings\", () => {\n        it('should read a field from ContextWithVariableBindings', () => {\n          var locals = new ContextWithVariableBindings(null,\n            MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n\n          expect(executeWatch('key', 'key', locals))\n            .toEqual(['key=value']);\n        });\n\n        it('should handle nested ContextWithVariableBindings', () => {\n          var nested = new ContextWithVariableBindings(null,\n            MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n          var locals = new ContextWithVariableBindings(nested, MapWrapper.create());\n\n          expect(executeWatch('key', 'key', locals))\n            .toEqual(['key=value']);\n        });\n\n        it(\"should fall back to a regular field read when ContextWithVariableBindings \" +\n           \"does not have the requested field\", () => {\n          var locals = new ContextWithVariableBindings(new Person(\"Jim\"),\n            MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n\n          expect(executeWatch('name', 'name', locals))\n            .toEqual(['name=Jim']);\n        });\n      });\n\n      describe(\"collections\", () => {\n        it(\"should support null values\", () => {\n          var context = new TestData(null);\n          var c = createChangeDetector('a', 'a', context, null, true);\n          var cd = c[\"changeDetector\"];\n          var dsp = c[\"dispatcher\"];\n\n          cd.detectChanges();\n          expect(dsp.log).toEqual(['a=null']);\n          dsp.clear();\n\n          cd.detectChanges();\n          expect(dsp.log).toEqual([]);\n\n          context.a = [0];\n          cd.detectChanges();\n\n          expect(dsp.log).toEqual([\"a=\" +\n            arrayChangesAsString({\n              collection: ['0[null->0]'],\n              additions: ['0[null->0]']\n            })\n          ]);\n          dsp.clear();\n\n          context.a = null;\n          cd.detectChanges();\n          expect(dsp.log).toEqual(['a=null']);\n        });\n\n        it(\"should throw if not collection / null\", () => {\n          var context = new TestData(\"not collection / null\");\n          var c = createChangeDetector('a', 'a', context, null, true);\n          expect(() => c[\"changeDetector\"].detectChanges())\n            .toThrowError(new RegExp(\"Collection records must be array like, map like or null\"));\n        });\n\n        describe(\"list\", () => {\n          it(\"should support list changes\", () => {\n            var context = new TestData([1, 2]);\n            expect(executeWatch(\"a\", \"a\", context, null, true))\n              .toEqual([\"a=\" +\n                        arrayChangesAsString({\n                          collection: ['1[null->0]', '2[null->1]'],\n                          additions: ['1[null->0]', '2[null->1]']\n                       })]);\n          });\n\n          it(\"should handle reference changes\", () => {\n            var context = new TestData([1, 2]);\n            var objs = createChangeDetector(\"a\", \"a\", context, null, true);\n            var cd = objs[\"changeDetector\"];\n            var dispatcher = objs[\"dispatcher\"];\n            cd.detectChanges();\n            dispatcher.clear();\n\n            context.a = [2, 1];\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual([\"a=\" +\n              arrayChangesAsString({\n                collection: ['2[1->0]', '1[0->1]'],\n                previous: ['1[0->1]', '2[1->0]'],\n                moves: ['2[1->0]', '1[0->1]']\n              })]);\n          });\n        });\n\n        describe(\"map\", () => {\n          it(\"should support map changes\", () => {\n            var map = MapWrapper.create();\n            MapWrapper.set(map, \"foo\", \"bar\");\n            var context = new TestData(map);\n            expect(executeWatch(\"a\", \"a\", context, null, true))\n              .toEqual([\"a=\" +\n                        kvChangesAsString({\n                          map: ['foo[null->bar]'],\n                          additions: ['foo[null->bar]']\n                       })]);\n          });\n\n          it(\"should handle reference changes\", () => {\n            var map = MapWrapper.create();\n            MapWrapper.set(map, \"foo\", \"bar\");\n            var context = new TestData(map);\n            var objs = createChangeDetector(\"a\", \"a\", context, null, true);\n            var cd = objs[\"changeDetector\"];\n            var dispatcher = objs[\"dispatcher\"];\n            cd.detectChanges();\n            dispatcher.clear();\n\n            context.a = MapWrapper.create();\n            MapWrapper.set(context.a, \"bar\", \"foo\");\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual([\"a=\" +\n              kvChangesAsString({\n                map: ['bar[null->foo]'],\n                previous: ['foo[bar->null]'],\n                additions: ['bar[null->foo]'],\n                removals: ['foo[bar->null]']\n              })]);\n          });\n        });\n\n        if (isJsObject({})) {\n          describe(\"js objects\", () => {\n            it(\"should support object changes\", () => {\n              var map = {\"foo\": \"bar\"};\n              var context = new TestData(map);\n              expect(executeWatch(\"a\", \"a\", context, null, true))\n                .toEqual([\"a=\" +\n                          kvChangesAsString({\n                            map: ['foo[null->bar]'],\n                            additions: ['foo[null->bar]']\n                         })]);\n            });\n          });\n        }\n      });\n\n      describe(\"adding new ranges\", () => {\n        var dispatcher;\n\n        beforeEach(() => {\n          dispatcher = new TestDispatcher();\n        });\n\n        /**\n         * Tests that we can add a new range after the current\n         * record has been disabled. The new range must be processed\n         * during the same change detection run.\n         */\n        it(\"should work when disabling the last enabled record\", () => {\n          var rr = createRange(dispatcher, ast(\"1\"), 1);\n\n          dispatcher.onChange = (group, _) => {\n            if (group === 1) { // to prevent infinite loop\n              var rangeToAppend = createRange(dispatcher, ast(\"2\"), 2);\n              rr.addRange(rangeToAppend);\n            }\n          };\n\n          detectChangesInRange(rr);\n\n          expect(dispatcher.loggedValues).toEqual([[1], [2]]);\n        });\n      });\n\n      describe(\"group changes\", () => {\n        it(\"should notify the dispatcher when a group of records changes\", () => {\n          var prr = new ProtoRecordRange();\n          prr.addRecordsFromAST(ast(\"1 + 2\"), \"memo\", 1);\n          prr.addRecordsFromAST(ast(\"10 + 20\"), \"memo\", 1);\n          prr.addRecordsFromAST(ast(\"100 + 200\"), \"memo2\", 2);\n\n          var dispatcher = new TestDispatcher();\n          var rr = prr.instantiate(dispatcher, null);\n\n          detectChangesInRange(rr);\n\n          expect(dispatcher.loggedValues).toEqual([[3, 30], [300]]);\n        });\n\n        it(\"should update every instance of a group individually\", () => {\n          var prr = new ProtoRecordRange();\n          prr.addRecordsFromAST(ast(\"1 + 2\"), \"memo\", \"memo\");\n\n          var dispatcher = new TestDispatcher();\n          var rr = new RecordRange(null, dispatcher);\n          rr.addRange(prr.instantiate(dispatcher, null));\n          rr.addRange(prr.instantiate(dispatcher, null));\n\n          detectChangesInRange(rr);\n\n          expect(dispatcher.loggedValues).toEqual([[3], [3]]);\n        });\n\n        it(\"should notify the dispatcher before switching to the next group\", () => {\n          var prr = new ProtoRecordRange();\n          prr.addRecordsFromAST(ast(\"a()\"), \"a\", 1);\n          prr.addRecordsFromAST(ast(\"b()\"), \"b\", 2);\n          prr.addRecordsFromAST(ast(\"c()\"), \"c\", 2);\n\n          var dispatcher = new TestDispatcher();\n          var rr = prr.instantiate(dispatcher, null);\n\n          var tr = new TestRecord();\n          tr.a = () => {dispatcher.logValue('InvokeA'); return 'a'};\n          tr.b = () => {dispatcher.logValue('InvokeB'); return 'b'};\n          tr.c = () => {dispatcher.logValue('InvokeC'); return 'c'};\n          rr.setContext(tr);\n\n          detectChangesInRange(rr);\n\n          expect(dispatcher.loggedValues).toEqual(['InvokeA', ['a'], 'InvokeB', 'InvokeC', ['b', 'c']]);\n        });\n      });\n\n      describe(\"enforce no new changes\", () => {\n        it(\"should throw when a record gets changed after it has been checked\", () => {\n          var prr = new ProtoRecordRange();\n          prr.addRecordsFromAST(ast(\"a\"), \"a\", 1);\n          prr.addRecordsFromAST(ast(\"b()\"), \"b\", 2);\n\n          var tr = new TestRecord();\n          tr.a = \"a\";\n          tr.b = () => {tr.a = \"newA\";};\n\n          var dispatcher = new TestDispatcher();\n          var rr = prr.instantiate(dispatcher, null);\n          rr.setContext(tr);\n\n          expect(() => {\n            var cd = new ChangeDetector(rr, true);\n            cd.detectChanges();\n          }).toThrowError(new RegExp(\"Expression 'a in location' has changed after it was checked\"));\n        });\n      });\n\n      describe(\"error handling\", () => {\n        it(\"should wrap exceptions into ChangeDetectionError\", () => {\n          try {\n            var rr = createRange(new TestDispatcher(), ast(\"invalidProp\", \"someComponent\"), 1);\n            detectChangesInRange(rr);\n\n            throw new BaseException(\"fail\");\n          } catch (e) {\n            expect(e).toBeAnInstanceOf(ChangeDetectionError);\n            expect(e.location).toEqual(\"invalidProp in someComponent\");\n          }\n        });\n      });\n    });\n  });\n}\n\nclass TestRecord {\n  a;\n  b;\n  c;\n}\n\nclass Person {\n  name:string;\n  address:Address;\n  constructor(name:string, address:Address = null) {\n    this.name = name;\n    this.address = address;\n  }\n\n  sayHi(m) {\n    return `Hi, ${m}`;\n  }\n\n  toString():string {\n    var address = this.address == null ? '' : ' address=' + this.address.toString();\n\n    return 'name=' + this.name + address;\n  }\n}\n\nclass Address {\n  city:string;\n  constructor(city:string) {\n    this.city = city;\n  }\n\n  toString():string {\n    return this.city;\n  }\n}\n\nclass TestData {\n  a;\n  constructor(a) {\n    this.a = a;\n  }\n}\n\nclass TestDispatcher extends ChangeDispatcher {\n  log:List;\n  loggedValues:List;\n  onChange:Function;\n\n  constructor() {\n    this.log = null;\n    this.loggedValues = null;\n    this.onChange = (_, __) => {};\n    this.clear();\n  }\n\n  clear() {\n    this.log = ListWrapper.create();\n    this.loggedValues = ListWrapper.create();\n  }\n\n  logValue(value) {\n    ListWrapper.push(this.loggedValues, value);\n  }\n\n  onRecordChange(group, records:List) {\n    var value = records[0].currentValue;\n    var dest = records[0].protoRecord.dest;\n    ListWrapper.push(this.log, dest + '=' + this._asString(value));\n\n    var values = ListWrapper.map(records, (r) => r.currentValue);\n    ListWrapper.push(this.loggedValues, values);\n\n    this.onChange(group, records);\n  }\n\n  _asString(value) {\n    return (isBlank(value) ? 'null' : value.toString());\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$traceurRuntime.type.$__placeholder__0)","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)"]}