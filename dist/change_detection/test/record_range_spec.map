{"version":3,"file":"/Users/deast/Angular/angular/modules/change_detection/test/record_range_spec.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","record_range_spec.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/change_detection/test/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {ddescribe, describe, it, iit, xit, expect, beforeEach} from 'test_lib/test_lib';\n\nimport {Parser} from 'change_detection/parser/parser';\nimport {Lexer} from 'change_detection/parser/lexer';\n\nimport {List, ListWrapper, MapWrapper} from 'facade/collection';\nimport {isPresent} from 'facade/lang';\n\nimport {\n  ChangeDetector,\n  ProtoRecordRange,\n  RecordRange,\n  ProtoRecord,\n  RECORD_TYPE_CONST\n  } from 'change_detection/change_detector';\n\nimport {Record} from 'change_detection/record';\n\nexport function main() {\n  var lookupName = (names, item) =>\n    ListWrapper.last(\n      ListWrapper.find(names, (pair) => pair[0] === item));\n\n  function enabledRecordsInReverseOrder(rr:RecordRange, names:List) {\n    var reversed = [];\n    var record = rr.findLastEnabledRecord();\n    while (isPresent(record)) {\n      ListWrapper.push(reversed, lookupName(names, record));\n      record = record.prevEnabled;\n    }\n    return reversed;\n  }\n\n  function enabledRecords(rr:RecordRange, names:List) {\n    var res = [];\n    var record = rr.findFirstEnabledRecord();\n    while (isPresent(record)) {\n      ListWrapper.push(res, lookupName(names, record));\n      record = record.nextEnabled;\n    }\n\n    // check that all links are set properly in both directions\n    var reversed = enabledRecordsInReverseOrder(rr, names);\n    expect(res).toEqual(ListWrapper.reversed(reversed));\n\n    return res;\n  }\n\n  function createRecord(rr) {\n    return new Record(rr, new ProtoRecord(null, 0, null, null, null, null, null, null), null);\n  }\n\n  describe('record range', () => {\n    it('should add records', () => {\n      var rr = new RecordRange(null, null);\n      var record1 = createRecord(rr);\n      var record2 = createRecord(rr);\n\n      rr.addRecord(record1);\n      rr.addRecord(record2);\n\n      expect(enabledRecords(rr, [\n        [record1, 'record1'],\n        [record2, 'record2']\n      ])).toEqual(['record1', 'record2']);\n    });\n\n    describe('adding/removing record ranges', () => {\n      var parent, child1, child2, child3;\n      var childRecord1, childRecord2, childRecord3;\n      var recordNames;\n\n      beforeEach(() => {\n        parent = new RecordRange(null, null);\n\n        child1 = new RecordRange(null, null);\n        childRecord1 = createRecord(child1);\n        child1.addRecord(childRecord1);\n\n        child2 = new RecordRange(null, null);\n        childRecord2 = createRecord(child2);\n        child2.addRecord(childRecord2);\n\n        child3 = new RecordRange(null, null);\n        childRecord3 = createRecord(child3);\n        child3.addRecord(childRecord3);\n\n        recordNames = [\n          [childRecord1, 'record1'],\n          [childRecord2, 'record2'],\n          [childRecord3, 'record3']\n        ];\n      });\n\n      it('should add record ranges', () => {\n        parent.addRange(child1);\n        parent.addRange(child2);\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record1', 'record2']);\n      });\n\n      it('should handle adding an empty range', () => {\n        var emptyRange = new RecordRange(null, null);\n        parent.addRange(child1);\n        parent.addRange(child2);\n        child1.addRange(emptyRange);\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record1', 'record2']);\n      });\n\n      it('should handle enabling/disabling an empty range', () => {\n        var emptyRange = new RecordRange(null, null);\n        emptyRange.disable();\n        emptyRange.enable();\n\n        expect(enabledRecords(emptyRange, recordNames)).toEqual([]);\n      });\n\n      it('should handle adding a range into an empty range', () => {\n        var emptyRange = new RecordRange(null, null);\n        parent.addRange(emptyRange);\n        parent.addRange(child2);\n\n        emptyRange.addRange(child1);\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record1', 'record2']);\n      });\n\n      it('should add nested record ranges', () => {\n        parent.addRange(child1);\n        child1.addRange(child2);\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record1', 'record2']);\n      });\n\n      it('should remove record ranges', () => {\n        parent.addRange(child1);\n        parent.addRange(child2);\n\n        child1.remove();\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record2']);\n\n        child2.remove();\n\n        expect(enabledRecords(parent, recordNames)).toEqual([]);\n      });\n\n      it('should remove an empty record range', () => {\n        var emptyRange = new RecordRange(null, null);\n        parent.addRange(child1);\n        parent.addRange(emptyRange);\n        parent.addRange(child2);\n\n        emptyRange.remove();\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record1', 'record2']);\n      });\n\n      it('should remove a record range surrounded by other ranges', () => {\n        parent.addRange(child1);\n        parent.addRange(child2);\n        parent.addRange(child3);\n\n        child2.remove();\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record1', 'record3']);\n      });\n    });\n\n    describe('enabling/disabling records', () => {\n      var rr;\n      var record1, record2, record3, record4;\n      var recordNames;\n\n      beforeEach(() => {\n        rr = new RecordRange(null, null);\n        record1 = createRecord(rr);\n        record2 = createRecord(rr);\n        record3 = createRecord(rr);\n        record4 = createRecord(rr);\n\n        recordNames = [\n          [record1, 'record1'],\n          [record2, 'record2'],\n          [record3, 'record3'],\n          [record4, 'record4']\n        ];\n      });\n\n      it('should disable a single record', () => {\n        rr.addRecord(record1);\n\n        record1.disable();\n\n        expect(enabledRecords(rr, recordNames)).toEqual([]);\n      });\n\n      it('should enable a single record', () => {\n        rr.addRecord(record1);\n        record1.disable();\n\n        record1.enable();\n\n        expect(enabledRecords(rr, recordNames)).toEqual(['record1']);\n      });\n\n      it('should disable a record', () => {\n        rr.addRecord(record1);\n        rr.addRecord(record2);\n        rr.addRecord(record3);\n        rr.addRecord(record4);\n\n        record2.disable();\n        record3.disable();\n\n        expect(record2.isDisabled()).toBeTruthy();\n        expect(record3.isDisabled()).toBeTruthy();\n\n        expect(enabledRecords(rr, recordNames)).toEqual(['record1', 'record4']);\n      });\n\n      it('should enable a record', () => {\n        rr.addRecord(record1);\n        rr.addRecord(record2);\n        rr.addRecord(record3);\n        rr.addRecord(record4);\n        record2.disable();\n        record3.disable();\n\n        record2.enable();\n        record3.enable();\n\n        expect(enabledRecords(rr, recordNames)).toEqual(['record1', 'record2', 'record3', 'record4']);\n      });\n\n      it('should disable a single record in a range', () => {\n        var rr1 = new RecordRange(null, null);\n        rr1.addRecord(record1);\n\n        var rr2 = new RecordRange(null, null);\n        rr2.addRecord(record2);\n\n        var rr3 = new RecordRange(null, null);\n        rr3.addRecord(record3);\n\n        rr.addRange(rr1);\n        rr.addRange(rr2);\n        rr.addRange(rr3);\n\n        record2.disable();\n\n        expect(enabledRecords(rr, recordNames)).toEqual(['record1', 'record3']);\n\n        record2.enable();\n\n        expect(enabledRecords(rr, recordNames)).toEqual(['record1', 'record2', 'record3']);\n      });\n    });\n\n    describe('enabling/disabling record ranges', () => {\n      var child1, child2, child3, child4;\n      var record1, record2, record3, record4;\n      var recordNames;\n\n      beforeEach(() => {\n        child1 = new RecordRange(null, null);\n        record1 = createRecord(child1);\n        child1.addRecord(record1);\n\n        child2 = new RecordRange(null, null);\n        record2 = createRecord(child2);\n        child2.addRecord(record2);\n\n        child3 = new RecordRange(null, null);\n        record3 = createRecord(child3);\n        child3.addRecord(record3);\n\n        child4 = new RecordRange(null, null);\n        record4 = createRecord(child4);\n        child4.addRecord(record4);\n\n        recordNames = [\n          [record1, 'record1'],\n          [record2, 'record2'],\n          [record3, 'record3'],\n          [record4, 'record4']\n        ];\n      });\n\n      it('should disable a single record range', () => {\n        var parent = new RecordRange(null, null);\n        parent.addRange(child1);\n\n        child1.disable();\n\n        expect(enabledRecords(parent, recordNames)).toEqual([]);\n      });\n\n      it('should enable a single record range', () => {\n        var parent = new RecordRange(null, null);\n        parent.addRange(child1);\n\n        child1.disable();\n\n        child1.enable();\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record1']);\n      });\n\n      it('should disable a record range', () => {\n        var parent = new RecordRange(null, null);\n        parent.addRange(child1);\n        parent.addRange(child2);\n        parent.addRange(child3);\n        parent.addRange(child4);\n\n        child2.disable();\n        child3.disable();\n\n        expect(enabledRecords(parent, recordNames)).toEqual(['record1', 'record4']);\n      });\n\n      it('should enable a record range', () => {\n        var parent = new RecordRange(null, null);\n        parent.addRange(child1);\n        parent.addRange(child2);\n        parent.addRange(child3);\n        parent.addRange(child4);\n\n        child2.disable();\n        child2.disable();\n\n        child2.enable();\n        child3.enable();\n\n        expect(enabledRecords(parent, recordNames)).toEqual([\n          'record1', 'record2', 'record3', 'record4'\n        ]);\n      });\n    });\n\n    describe(\"inspect\", () => {\n      it(\"should return the description of the record\", () => {\n        var proto = new ProtoRecord(null, RECORD_TYPE_CONST, 1, 0, \"name\", null, \"group\", \"expression\");\n        var record = new Record(null, proto, null);\n\n        var i = record.inspect();\n        expect(i.description).toContain(\"const, name, enabled\");\n      });\n\n      it(\"should return the description of the records in the range\", () => {\n        var proto = new ProtoRecord(null, RECORD_TYPE_CONST, 1, 0, \"name\", null, \"group\", \"expression\");\n        var record = new Record(null, proto, null);\n        var range = new RecordRange(null, null);\n        range.addRecord(record);\n\n        var i = range.inspect();;\n        expect(i.length).toEqual(1);\n        expect(i[0]).toContain(\"const, name, enabled\");\n      });\n    });\n  });\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;"]}