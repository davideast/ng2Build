{"version":3,"file":"/Users/deast/Angular/angular/modules/core/src/compiler/pipeline/property_binding_parser.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","property_binding_parser.js","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/core/src/compiler/pipeline/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","import {isPresent, isBlank, RegExpWrapper, BaseException} from 'facade/lang';\nimport {MapWrapper} from 'facade/collection';\nimport {TemplateElement} from 'facade/dom';\n\nimport {Parser, AST, ExpressionWithSource} from 'change_detection/change_detection';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\n\nimport {interpolationToExpression} from './text_interpolation_parser';\n\n// TODO(tbosch): Cannot make this const/final right now because of the transpiler...\nvar BIND_NAME_REGEXP = RegExpWrapper.create('^(?:(?:(bind)|(let)|(on))-(.+))|\\\\[([^\\\\]]+)\\\\]|\\\\(([^\\\\)]+)\\\\)');\n\n/**\n * Parses the property bindings on a single element.\n *\n * Fills:\n * - CompileElement#propertyBindings\n * - CompileElement#eventBindings\n * - CompileElement#variableBindings\n */\nexport class PropertyBindingParser extends CompileStep {\n  _parser:Parser;\n  _compilationUnit:any;\n  constructor(parser:Parser, compilationUnit:any) {\n    this._parser = parser;\n    this._compilationUnit = compilationUnit;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var attrs = current.attrs();\n    MapWrapper.forEach(attrs, (attrValue, attrName) => {\n      var bindParts = RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);\n      if (isPresent(bindParts)) {\n        if (isPresent(bindParts[1])) {\n          // match: bind-prop\n          current.addPropertyBinding(bindParts[4], this._parseBinding(attrValue));\n        } else if (isPresent(bindParts[2])) {\n          // match: let-prop\n          // Note: We assume that the ViewSplitter already did its work, i.e. template directive should\n          // only be present on <template> elements any more!\n          if (!(current.element instanceof TemplateElement)) {\n            throw new BaseException('let-* is only allowed on <template> elements!');\n          }\n          current.addVariableBinding(bindParts[4], attrValue);\n        } else if (isPresent(bindParts[3])) {\n          // match: on-prop\n          current.addEventBinding(bindParts[4], this._parseAction(attrValue));\n        } else if (isPresent(bindParts[5])) {\n          // match: [prop]\n          current.addPropertyBinding(bindParts[5], this._parseBinding(attrValue));\n        } else if (isPresent(bindParts[6])) {\n          // match: (prop)\n          current.addEventBinding(bindParts[6], this._parseBinding(attrValue));\n        }\n      } else {\n        var expression = interpolationToExpression(attrValue);\n        if (isPresent(expression)) {\n          current.addPropertyBinding(attrName, this._parseBinding(expression));\n        }\n      }\n    });\n  }\n\n  _parseBinding(input:string):AST {\n    return this._parser.parseBinding(input, this._compilationUnit);\n  }\n\n  _parseAction(input:string):AST {\n    return this._parser.parseAction(input, this._compilationUnit);\n  }\n}\n","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$traceurRuntime.type.$__placeholder__0)"]}