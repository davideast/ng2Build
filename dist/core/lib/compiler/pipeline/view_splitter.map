{"version":3,"file":"/Users/deast/Angular/angular/modules/core/src/compiler/pipeline/view_splitter.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/20","view_splitter.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/core/src/compiler/pipeline/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {isBlank, isPresent} from 'facade/lang';\nimport {DOM, TemplateElement} from 'facade/dom';\nimport {MapWrapper, ListWrapper} from 'facade/collection';\n\nimport {Parser} from 'change_detection/change_detection';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\n\n/**\n * Splits views at `<template>` elements or elements with `template` attribute:\n * For `<template>` elements:\n * - moves the content into a new and disconnected `<template>` element\n *   that is marked as view root.\n *\n * For elements with a `template` attribute:\n * - replaces the element with an empty `<template>` element,\n *   parses the content of the `template` attribute and adds the information to that\n *   `<template>` element. Marks the elements as view root.\n *\n * Note: In both cases the root of the nested view is disconnected from its parent element.\n * This is needed for browsers that don't support the `<template>` element\n * as we want to do locate elements with bindings using `getElementsByClassName` later on,\n * which should not descend into the nested view.\n *\n * Fills:\n * - CompileElement#isViewRoot\n * - CompileElement#variableBindings\n * - CompileElement#propertyBindings\n */\nexport class ViewSplitter extends CompileStep {\n  _parser:Parser;\n  _compilationUnit:any;\n  constructor(parser:Parser, compilationUnit:any) {\n    this._parser = parser;\n    this._compilationUnit = compilationUnit;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    if (isBlank(parent)) {\n      current.isViewRoot = true;\n    } else {\n      if (current.element instanceof TemplateElement) {\n        if (!current.isViewRoot) {\n          var viewRoot = new CompileElement(DOM.createTemplate(''));\n          var currentElement:TemplateElement = current.element;\n          var viewRootElement:TemplateElement = viewRoot.element;\n          this._moveChildNodes(currentElement.content, viewRootElement.content);\n          viewRoot.isViewRoot = true;\n          control.addChild(viewRoot);\n        }\n      } else {\n        var templateBindings = MapWrapper.get(current.attrs(), 'template');\n        if (isPresent(templateBindings)) {\n          var newParent = new CompileElement(DOM.createTemplate(''));\n          current.isViewRoot = true;\n          this._parseTemplateBindings(templateBindings, newParent);\n          this._addParentElement(current.element, newParent.element);\n\n          control.addParent(newParent);\n          current.element.remove();\n        }\n      }\n    }\n  }\n\n  _moveChildNodes(source, target) {\n    while (isPresent(source.firstChild)) {\n      DOM.appendChild(target, source.firstChild);\n    }\n  }\n\n  _addParentElement(currentElement, newParentElement) {\n    DOM.parentElement(currentElement).insertBefore(newParentElement, currentElement);\n    DOM.appendChild(newParentElement, currentElement);\n  }\n\n  _parseTemplateBindings(templateBindings:string, compileElement:CompileElement) {\n    var bindings = this._parser.parseTemplateBindings(templateBindings, this._compilationUnit);\n    for (var i=0; i<bindings.length; i++) {\n      var binding = bindings[i];\n      if (isPresent(binding.name)) {\n        compileElement.addVariableBinding(binding.key, binding.name);\n      } else if (isPresent(binding.expression)) {\n        compileElement.addPropertyBinding(binding.key, binding.expression);\n      } else {\n        compileElement.element.setAttribute(binding.key, '');\n      }\n    }\n  }\n}\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$traceurRuntime.type.$__placeholder__0)"]}