{"version":3,"file":"/Users/deast/Angular/angular/modules/core/src/compiler/view.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","view.js","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/29","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/core/src/compiler/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","import {DOM, Element, Node, Text, DocumentFragment, TemplateElement} from 'facade/dom';\nimport {ListWrapper, MapWrapper, StringMapWrapper, List} from 'facade/collection';\nimport {ProtoRecordRange, RecordRange, Record,\n  ChangeDispatcher, AST, ContextWithVariableBindings} from 'change_detection/change_detection';\n\nimport {ProtoElementInjector, ElementInjector, PreBuiltObjects} from './element_injector';\nimport {ElementBinder} from './element_binder';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {SetterFn} from 'reflection/types';\nimport {FIELD, IMPLEMENTS, int, isPresent, isBlank, BaseException} from 'facade/lang';\nimport {Injector} from 'di/di';\nimport {NgElement} from 'core/dom/element';\nimport {ViewPort} from './viewport';\nimport {OnChange} from './interfaces';\nimport {Content} from './shadow_dom_emulation/content_tag';\nimport {LightDom, DestinationLightDom} from './shadow_dom_emulation/light_dom';\n\nconst NG_BINDING_CLASS = 'ng-binding';\nconst NG_BINDING_CLASS_SELECTOR = '.ng-binding';\n// TODO(tbosch): Cannot use `const` because of Dart.\nvar NO_FORMATTERS = MapWrapper.create();\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n */\n@IMPLEMENTS(ChangeDispatcher)\nexport class View {\n  /// This list matches the _nodes list. It is sparse, since only Elements have ElementInjector\n  rootElementInjectors:List<ElementInjector>;\n  elementInjectors:List<ElementInjector>;\n  bindElements:List<Element>;\n  textNodes:List<Text>;\n  recordRange:RecordRange;\n  /// When the view is part of render tree, the DocumentFragment is empty, which is why we need\n  /// to keep track of the nodes.\n  nodes:List<Node>;\n  componentChildViews: List<View>;\n  viewPorts: List<ViewPort>;\n  preBuiltObjects: List<PreBuiltObjects>;\n  proto: ProtoView;\n  context: any;\n  contextWithLocals:ContextWithVariableBindings;\n\n  constructor(proto:ProtoView, nodes:List<Node>, protoRecordRange:ProtoRecordRange, protoContextLocals:Map) {\n    this.proto = proto;\n    this.nodes = nodes;\n    this.recordRange = protoRecordRange.instantiate(this, NO_FORMATTERS);\n    this.elementInjectors = null;\n    this.rootElementInjectors = null;\n    this.textNodes = null;\n    this.bindElements = null;\n    this.componentChildViews = null;\n    this.viewPorts = null;\n    this.preBuiltObjects = null;\n    this.context = null;\n    this.contextWithLocals = (MapWrapper.size(protoContextLocals) > 0)\n      ? new ContextWithVariableBindings(null, MapWrapper.clone(protoContextLocals))\n      : null;\n  }\n\n  init(elementInjectors:List, rootElementInjectors:List, textNodes: List, bindElements:List, viewPorts:List, preBuiltObjects:List, componentChildViews:List) {\n    this.elementInjectors = elementInjectors;\n    this.rootElementInjectors = rootElementInjectors;\n    this.textNodes = textNodes;\n    this.bindElements = bindElements;\n    this.viewPorts = viewPorts;\n    this.preBuiltObjects = preBuiltObjects;\n    this.componentChildViews = componentChildViews;\n  }\n\n  setLocal(contextName: string, value) {\n    if (!this.hydrated()) throw new BaseException('Cannot set locals on dehydrated view.');\n    if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {\n      throw new BaseException(\n          `Local binding ${contextName} not defined in the view template.`);\n    }\n    var templateName = MapWrapper.get(this.proto.variableBindings, contextName);\n    this.context.set(templateName, value);\n  }\n\n  hydrated() {\n    return isPresent(this.context);\n  }\n\n  _hydrateContext(newContext) {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.parent = newContext;\n      this.context = this.contextWithLocals;\n    } else {\n      this.context = newContext;\n    }\n    // TODO(tbosch): if we have a contextWithLocals we actually only need to\n    // set the contextWithLocals once. Would it be faster to always use a contextWithLocals\n    // even if we don't have locals and not update the recordRange here?\n    this.recordRange.setContext(this.context);\n  }\n\n  _dehydrateContext() {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.clearValues();\n    }\n    this.context = null;\n  }\n\n  /**\n   * A dehydrated view is a state of the view that allows it to be moved around\n   * the view tree, without incurring the cost of recreating the underlying\n   * injectors and watch records.\n   *\n   * A dehydrated view has the following properties:\n   *\n   * - all element injectors are empty.\n   * - all appInjectors are released.\n   * - all viewports are empty.\n   * - all context locals are set to null.\n   * - the view context is null.\n   *\n   * A call to hydrate/dehydrate does not attach/detach the view from the view\n   * tree.\n   */\n  hydrate(appInjector: Injector, hostElementInjector: ElementInjector,\n      context: Object) {\n    if (this.hydrated()) throw new BaseException('The view is already hydrated.');\n    this._hydrateContext(context);\n\n    // viewPorts\n    for (var i = 0; i < this.viewPorts.length; i++) {\n      this.viewPorts[i].hydrate(appInjector, hostElementInjector);\n    }\n\n    var binders = this.proto.elementBinders;\n    var componentChildViewIndex = 0;\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      var shadowDomAppInjector = null;\n\n      // shadowDomAppInjector\n      if (isPresent(componentDirective)) {\n        var services = componentDirective.annotation.componentServices;\n        if (isPresent(services))\n          shadowDomAppInjector = appInjector.createChild(services);\n        else {\n          shadowDomAppInjector = appInjector;\n        }\n      } else {\n        shadowDomAppInjector = null;\n      }\n\n      // elementInjectors\n      var elementInjector = this.elementInjectors[i];\n      if (isPresent(elementInjector)) {\n        elementInjector.instantiateDirectives(appInjector, shadowDomAppInjector, this.preBuiltObjects[i]);\n      }\n\n      if (isPresent(componentDirective)) {\n        this.componentChildViews[componentChildViewIndex++].hydrate(shadowDomAppInjector,\n          elementInjector, elementInjector.getComponent());\n\n        var lightDom = this.preBuiltObjects[i].lightDom;\n        if (isPresent(lightDom)) lightDom.redistribute();\n      }\n    }\n  }\n\n  dehydrate() {\n    // Note: preserve the opposite order of the hydration process.\n\n    // componentChildViews\n    for (var i = 0; i < this.componentChildViews.length; i++) {\n      this.componentChildViews[i].dehydrate();\n    }\n\n    // elementInjectors\n    for (var i = 0; i < this.elementInjectors.length; i++) {\n      this.elementInjectors[i].clearDirectives();\n    }\n\n    // viewPorts\n    if (isPresent(this.viewPorts)) {\n      for (var i = 0; i < this.viewPorts.length; i++) {\n        this.viewPorts[i].dehydrate();\n      }\n    }\n\n    this._dehydrateContext();\n  }\n\n  onRecordChange(groupMemento, records:List<Record>) {\n    this._invokeMementoForRecords(records);\n    if (groupMemento instanceof DirectivePropertyGroupMemento) {\n      this._notifyDirectiveAboutChanges(groupMemento, records);\n    }\n  }\n\n  getViewPortByTemplateElement(node):ViewPort {\n    if (!(node instanceof Element)) return null;\n\n    for (var i = 0; i < this.viewPorts.length; ++i) {\n      if (this.viewPorts[i].templateElement === node) return this.viewPorts[i];\n    }\n\n    return null;\n  }\n\n  _invokeMementoForRecords(records:List<Record>) {\n    for(var i = 0; i < records.length; ++i) {\n      this._invokeMementoFor(records[i]);\n    }\n  }\n\n  _notifyDirectiveAboutChanges(groupMemento, records:List<Record>) {\n    var dir = groupMemento.directive(this.elementInjectors);\n    if (dir instanceof OnChange) {\n      dir.onChange(this._collectChanges(records));\n    }\n  }\n\n    // dispatch to element injector or text nodes based on context\n  _invokeMementoFor(record:Record) {\n    var memento = record.expressionMemento();\n    if (memento instanceof DirectivePropertyMemento) {\n      // we know that it is DirectivePropertyMemento\n      var directiveMemento:DirectivePropertyMemento = memento;\n      directiveMemento.invoke(record, this.elementInjectors);\n\n    } else if (memento instanceof ElementPropertyMemento) {\n      var elementMemento:ElementPropertyMemento = memento;\n      elementMemento.invoke(record, this.bindElements);\n\n    } else {\n      // we know it refers to _textNodes.\n      var textNodeIndex:number = memento;\n      DOM.setText(this.textNodes[textNodeIndex], record.currentValue);\n    }\n  }\n\n  _collectChanges(records:List<Record>) {\n    var changes = StringMapWrapper.create();\n    for(var i = 0; i < records.length; ++i) {\n      var record = records[i];\n      var propertyUpdate = new PropertyUpdate(record.currentValue, record.previousValue);\n      StringMapWrapper.set(changes, record.expressionMemento()._setterName, propertyUpdate);\n    }\n    return changes;\n  }\n}\n\nexport class ProtoView {\n  element:Element;\n  elementBinders:List<ElementBinder>;\n  protoRecordRange:ProtoRecordRange;\n  variableBindings: Map;\n  protoContextLocals:Map;\n  textNodesWithBindingCount:int;\n  elementsWithBindingCount:int;\n  instantiateInPlace:boolean;\n  rootBindingOffset:int;\n  isTemplateElement:boolean;\n  constructor(\n      template:Element,\n      protoRecordRange:ProtoRecordRange) {\n    this.element = template;\n    this.elementBinders = [];\n    this.variableBindings = MapWrapper.create();\n    this.protoContextLocals = MapWrapper.create();\n    this.protoRecordRange = protoRecordRange;\n    this.textNodesWithBindingCount = 0;\n    this.elementsWithBindingCount = 0;\n    this.instantiateInPlace = false;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS))\n      ? 1 : 0;\n    this.isTemplateElement = this.element instanceof TemplateElement;\n  }\n\n  // TODO(rado): hostElementInjector should be moved to hydrate phase.\n  instantiate(hostElementInjector: ElementInjector):View {\n    var rootElementClone = this.instantiateInPlace ? this.element : DOM.clone(this.element);\n    var elementsWithBindingsDynamic;\n    if (this.isTemplateElement) {\n      elementsWithBindingsDynamic = DOM.querySelectorAll(rootElementClone.content, NG_BINDING_CLASS_SELECTOR);\n    } else {\n      elementsWithBindingsDynamic= DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);\n    }\n\n    var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);\n    for (var i = 0; i < elementsWithBindingsDynamic.length; ++i) {\n      elementsWithBindings[i] = elementsWithBindingsDynamic[i];\n    }\n\n    var viewNodes;\n    if (this.isTemplateElement) {\n      var childNode = DOM.firstChild(rootElementClone.content);\n      viewNodes = []; // TODO(perf): Should be fixed size, since we could pre-compute in in ProtoView\n      // Note: An explicit loop is the fastest way to convert a DOM array into a JS array!\n      while(childNode != null) {\n        ListWrapper.push(viewNodes, childNode);\n        childNode = DOM.nextSibling(childNode);\n      }\n    } else {\n      viewNodes = [rootElementClone];\n    }\n    var view = new View(this, viewNodes, this.protoRecordRange, this.protoContextLocals);\n\n    var binders = this.elementBinders;\n    var elementInjectors = ListWrapper.createFixedSize(binders.length);\n    var rootElementInjectors = [];\n    var textNodes = [];\n    var elementsWithPropertyBindings = [];\n    var preBuiltObjects = ListWrapper.createFixedSize(binders.length);\n    var viewPorts = [];\n    var componentChildViews = [];\n\n    for (var i = 0; i < binders.length; i++) {\n      var binder = binders[i];\n      var element;\n      if (i === 0 && this.rootBindingOffset === 1) {\n        element = rootElementClone;\n      } else {\n        element = elementsWithBindings[i - this.rootBindingOffset];\n      }\n      var elementInjector = null;\n\n      // elementInjectors and rootElementInjectors\n      var protoElementInjector = binder.protoElementInjector;\n      if (isPresent(protoElementInjector)) {\n        if (isPresent(protoElementInjector.parent)) {\n          var parentElementInjector = elementInjectors[protoElementInjector.parent.index];\n          elementInjector = protoElementInjector.instantiate(parentElementInjector, null);\n        } else {\n          elementInjector = protoElementInjector.instantiate(null, hostElementInjector);\n          ListWrapper.push(rootElementInjectors, elementInjector);\n        }\n      }\n      elementInjectors[i] = elementInjector;\n\n      if (binder.hasElementPropertyBindings) {\n        ListWrapper.push(elementsWithPropertyBindings, element);\n      }\n\n      // textNodes\n      var textNodeIndices = binder.textNodeIndices;\n      if (isPresent(textNodeIndices)) {\n        var childNode = DOM.firstChild(DOM.templateAwareRoot(element));\n        for (var j = 0, k = 0; j < textNodeIndices.length; j++) {\n          for(var index = textNodeIndices[j]; k < index; k++) {\n            childNode = DOM.nextSibling(childNode);\n          }\n          ListWrapper.push(textNodes, childNode);\n        }\n      }\n\n      // componentChildViews\n      var lightDom = null;\n      if (isPresent(binder.componentDirective)) {\n        var childView = binder.nestedProtoView.instantiate(elementInjector);\n        view.recordRange.addRange(childView.recordRange);\n\n        lightDom = binder.componentDirective.shadowDomStrategy.constructLightDom(view, childView, element);\n        binder.componentDirective.shadowDomStrategy.attachTemplate(element, childView);\n\n        ListWrapper.push(componentChildViews, childView);\n      }\n\n      // viewPorts\n      var viewPort = null;\n      if (isPresent(binder.templateDirective)) {\n        var destLightDom = this._parentElementLightDom(protoElementInjector, preBuiltObjects);\n        viewPort = new ViewPort(view, element, binder.nestedProtoView, elementInjector, destLightDom);\n        ListWrapper.push(viewPorts, viewPort);\n      }\n\n      // preBuiltObjects\n      if (isPresent(elementInjector)) {\n        preBuiltObjects[i] = new PreBuiltObjects(view, new NgElement(element), viewPort, lightDom);\n      }\n\n      // events\n      if (isPresent(binder.events)) {\n        // TODO(rado): if there is directive at this element that injected an\n        // event emitter for that eventType do not attach the handler.\n        MapWrapper.forEach(binder.events, (expr, eventName) => {\n          DOM.on(element, eventName, (event) => {\n            if (event.target === element) {\n              // TODO(rado): replace with\n              // expr.eval(new ContextWithVariableBindings(view.context, {'$event': event}));\n              // when eval with variable bindinds works.\n              expr.eval(view.context);\n            }\n          });\n        });\n      }\n    }\n\n    view.init(elementInjectors, rootElementInjectors, textNodes, elementsWithPropertyBindings,\n      viewPorts, preBuiltObjects, componentChildViews);\n\n    return view;\n  }\n\n  _parentElementLightDom(protoElementInjector:ProtoElementInjector, preBuiltObjects:List):LightDom {\n    var p = protoElementInjector.parent;\n    return isPresent(p) ? preBuiltObjects[p.index].lightDom : null;\n  }\n\n  bindVariable(contextName:string, templateName:string) {\n    MapWrapper.set(this.variableBindings, contextName, templateName);\n    MapWrapper.set(this.protoContextLocals, templateName, null);\n  }\n\n  bindElement(protoElementInjector:ProtoElementInjector,\n      componentDirective:DirectiveMetadata = null, templateDirective:DirectiveMetadata = null):ElementBinder {\n    var elBinder = new ElementBinder(protoElementInjector, componentDirective, templateDirective);\n    ListWrapper.push(this.elementBinders, elBinder);\n    return elBinder;\n  }\n\n  /**\n   * Adds a text node binding for the last created ElementBinder via bindElement\n   */\n  bindTextNode(indexInParent:int, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.textNodeIndices)) {\n      elBinder.textNodeIndices = ListWrapper.create();\n    }\n    ListWrapper.push(elBinder.textNodeIndices, indexInParent);\n    var memento = this.textNodesWithBindingCount++;\n    this.protoRecordRange.addRecordsFromAST(expression, memento, memento);\n  }\n\n  /**\n   * Adds an element property binding for the last created ElementBinder via bindElement\n   */\n  bindElementProperty(expression:AST, setterName:string, setter:SetterFn) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (!elBinder.hasElementPropertyBindings) {\n      elBinder.hasElementPropertyBindings = true;\n      this.elementsWithBindingCount++;\n    }\n    var memento = new ElementPropertyMemento(this.elementsWithBindingCount-1, setterName, setter);\n    this.protoRecordRange.addRecordsFromAST(expression, memento, memento);\n  }\n\n  /**\n   * Adds an event binding for the last created ElementBinder via bindElement\n   */\n  bindEvent(eventName:string, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.events)) {\n      elBinder.events = MapWrapper.create();\n    }\n    MapWrapper.set(elBinder.events, eventName, expression);\n  }\n\n  /**\n   * Adds a directive property binding for the last created ElementBinder via bindElement\n   */\n  bindDirectiveProperty(\n    directiveIndex:number,\n    expression:AST,\n    setterName:string,\n    setter:SetterFn,\n    isContentWatch: boolean) {\n\n    var expMemento = new DirectivePropertyMemento(\n      this.elementBinders.length-1,\n      directiveIndex,\n      setterName,\n      setter\n    );\n    var groupMemento = DirectivePropertyGroupMemento.get(expMemento);\n    this.protoRecordRange.addRecordsFromAST(expression, expMemento, groupMemento, isContentWatch);\n  }\n\n  // Create a rootView as if the compiler encountered <rootcmp></rootcmp>,\n  // and the component template is already compiled into protoView.\n  // Used for bootstrapping.\n  static createRootProtoView(protoView: ProtoView,\n      insertionElement, rootComponentAnnotatedType: DirectiveMetadata): ProtoView {\n    DOM.addClass(insertionElement, 'ng-binding');\n    var rootProtoView = new ProtoView(insertionElement, new ProtoRecordRange());\n    rootProtoView.instantiateInPlace = true;\n    var binder = rootProtoView.bindElement(\n        new ProtoElementInjector(null, 0, [rootComponentAnnotatedType.type], true));\n    binder.componentDirective = rootComponentAnnotatedType;\n    binder.nestedProtoView = protoView;\n    return rootProtoView;\n  }\n}\n\nexport class ElementPropertyMemento {\n  _elementIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(elementIndex:int, setterName:string, setter:SetterFn) {\n    this._elementIndex = elementIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:Record, bindElements:List<Element>) {\n    var element:Element = bindElements[this._elementIndex];\n    this._setter(element, record.currentValue);\n  }\n}\n\nexport class DirectivePropertyMemento {\n  _elementInjectorIndex:int;\n  _directiveIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(\n      elementInjectorIndex:number,\n      directiveIndex:number,\n      setterName:string,\n      setter:SetterFn) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:Record, elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    var directive = elementInjector.getAtIndex(this._directiveIndex);\n    this._setter(directive, record.currentValue);\n  }\n}\n\nvar _groups = MapWrapper.create();\n\nclass DirectivePropertyGroupMemento {\n  _elementInjectorIndex:number;\n  _directiveIndex:number;\n\n  constructor(elementInjectorIndex:number, directiveIndex:number) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n  }\n\n  static get(memento:DirectivePropertyMemento) {\n    var elementInjectorIndex = memento._elementInjectorIndex;\n    var directiveIndex = memento._directiveIndex;\n    var id = elementInjectorIndex * 100 + directiveIndex;\n\n    if (!MapWrapper.contains(_groups, id)) {\n      MapWrapper.set(_groups, id, new DirectivePropertyGroupMemento(elementInjectorIndex, directiveIndex));\n    }\n    return MapWrapper.get(_groups, id);\n  }\n\n  directive(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getAtIndex(this._directiveIndex);\n  }\n}\n\nclass PropertyUpdate {\n  currentValue;\n  previousValue;\n\n  constructor(currentValue, previousValue) {\n    this.currentValue = currentValue;\n    this.previousValue = previousValue;\n  }\n}\n","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$traceurRuntime.type.$__placeholder__0)","void 0","$__placeholder__0 = $__placeholder__1"]}