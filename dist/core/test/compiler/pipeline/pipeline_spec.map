{"version":3,"file":"/Users/deast/Angular/angular/modules/core/test/compiler/pipeline/pipeline_spec.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","pipeline_spec.js","@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/20","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/23"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,4RAAuC,UAAS,SAAQ;;ACAvE,AAAI,IAAA,CAAA,YAAW,8CAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;ACU7B,SAAS,KAAG,CAAC,AAAC;AACnB,WAAO,AAAC,CAAC,kBAAiB,GAAG,SAAA,AAAC;AAC5B,aAAO,AAAC,CAAC,sBAAqB,GAAG,SAAA,AAAC;AAChC,SAAC,AAAC,CAAC,uEAAsE,GAAG,SAAA,AAAC,CAAK;AAChF,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,oEAAmE,CAAC,CAAC;AAEtF,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,GAAI,gBAAc,AAAC,CAAC,CAAC,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAEhF,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,OAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QACvD,EAAC,CAAC;AAEF,SAAC,AAAC,CAAC,4DAA2D,GAAG,SAAA,AAAC,CAAK;AACrE,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,oFAAmF,CAAC,CAAC;AAEtG,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,GAAI,mBAAiB,AAAC,EAAC,CAAG,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AAC1F,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAEvC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAC,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,OAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QAClD,EAAC,CAAC;MACJ,EAAC,CAAC;AAEF,aAAO,AAAC,CAAC,mBAAkB,GAAG,SAAA,AAAC;AAC7B,SAAC,AAAC,CAAC,wEAAuE,GAAG,SAAA,AAAC,CAAK;AACjF,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,gEAA+D,CAAC,CAAC;AAClF,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAC3B,CAAC,CAAC;AACF,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QACjE,EAAC,CAAC;AAEF,SAAC,AAAC,CAAC,yEAAwE,GAAG,SAAA,AAAC,CAAK;AAClF,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,0EAAyE,CAAC,CAAC;AAC5F,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAC3B,CAAC,CAAC;AACF,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,kBAAgB,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AACnF,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QAC5E,EAAC,CAAC;AAEF,SAAC,AAAC,CAAC,2EAA0E,GAAG,SAAA,AAAC,CAAK;AACpF,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,0EAAyE,CAAC,CAAC;AAC5F,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAC3B,CAAC,CAAC;AACF,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,YAAU,CAAG,YAAU,CAAC,CAAC,CAAC;AACnF,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,IAAE,CAAG,UAAQ,CAAG,IAAE,CAAC,CAAC,CAAC;QAC5E,EAAC,CAAC;AAEF,SAAC,AAAC,CAAC,4DAA2D,GAAG,SAAA,AAAC,CAAK;AACrE,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,gEAA+D,CAAC,CAAC;AAClF,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAC3B,CAAC,CAAC;AACF,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,kBAAgB,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AACnF,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QAC5E,EAAC,CAAC;MAEJ,EAAC,CAAC;AAEF,aAAO,AAAC,CAAC,kBAAiB,GAAG,SAAA,AAAC;AAC5B,SAAC,AAAC,CAAC,8DAA6D,GAAG,SAAA,AAAC;AAClE,AAAI,YAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,sCAAqC,CAAC,CAAC;AACxD,AAAI,YAAA,CAAA,SAAQ,EAAI,GAAC,CAAC;AAClB,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,eAAa,AAAC,CAAC,EAAC,AAAC,CAAC,oBAAmB,CAAC,CAAC,CAAC;AAC3D,AAAI,YAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,GAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AACzC,eAAI,aAAY,OAAO,AAAC,CAAC,OAAM,QAAQ,GAAG,CAAG,IAAE,CAAC,CAAG;AACjD,oBAAM,SAAS,AAAC,CAAC,QAAO,CAAC,CAAC;YAC5B;AAAA,UACF,EAAC,CACD,CAAA,gBAAe,AAAC,CAAC,SAAQ,CAAC,CAC5B,CAAC,CAAC;AACF,AAAI,YAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,MAAK,CAAE,CAAA,CAAC,CAAC,KAAK,AAAC,CAAC,QAAO,CAAC,CAAC;AAChC,eAAK,AAAC,CAAC,SAAQ,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC9C,eAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;QACtD,EAAC,CAAC;MACJ,EAAC,CAAC;IAEJ,EAAC,CAAC;EACJ;AAqBA,SAAS,SAAO,CAAE,GAAE,CAAG,CAAA,MAAK,CAAG,CAAA,OAAM,CAAG;AACtC,AAAI,MAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,OAAI,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAG;AACrB,aAAO,EAAI,CAAA,MAAK,QAAQ,aAAa,AAAC,CAAC,IAAG,CAAC,CAAA,CAAE,IAAE,CAAC;IAClD;AAAA,AACA,cAAU,KAAK,AAAC,CAAC,GAAE,CAAG,CAAA,QAAO,EAAE,CAAA,OAAM,QAAQ,aAAa,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;EACpE;AAAA,AAEA,SAAS,iBAAe,CAAE,GAAE;AAC1B,SAAO,IAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAChD,aAAO,AAAC,CAAC,GAAE,CAAG,OAAK,CAAG,QAAM,CAAC,CAAC;IAChC,EAAC,CAAC;EACJ;AAEA,SAAS,kBAAgB,CAAE,SAAQ,CAAG,CAAA,GAAE;AACtC,AAAI,MAAA,CAAA,aAAY,EAAI,EAAA,CAAC;AACrB,SAAO,IAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAChD,AAAI,QAAA,CAAA,cAAa,EAAI,CAAA,OAAM,QAAQ,aAAa,AAAC,CAAC,SAAQ,CAAC,CAAC;AAC5D,SAAI,SAAQ,AAAC,CAAC,cAAa,CAAC,CAAG;AAC7B,AAAI,UAAA,CAAA,WAAU,EAAI,CAAA,aAAY,SAAS,AAAC,CAAC,cAAa,CAAG,GAAC,CAAC,CAAC;AAC5D,cAAO,WAAU,EAAI,EAAA,CAAG;AACtB,gBAAM,UAAU,AAAC,CAAC,GAAI,eAAa,AAAC,CAAC,EAAC,AAAC,EAAC,UAAS,EAAC,UAAQ,EAAC,IAAG,EAAC,CAAA,aAAY,EAAE,EAAC,UAAO,EAAC,CAAC,CAAC,CAAC;AACzF,oBAAU,EAAE,CAAC;QACf;AAAA,MACF;AAAA,AACA,aAAO,AAAC,CAAC,GAAE,CAAG,OAAK,CAAG,QAAM,CAAC,CAAC;IAChC,EAAC,CAAC;EACJ;AAEA,SAAS,YAAU,CAAE,MAAK;AACxB,AAAI,MAAA,CAAA,KAAI,EAAI,GAAC,CAAC;AACd,cAAU,QAAQ,AAAC,CAAC,MAAK,GAAG,SAAC,OAAM,CAAM;AACvC,aAAO,AAAC,CAAC,KAAI,CAAG,KAAG,CAAG,QAAM,CAAC,CAAC;IAChC,EAAC,CAAC;AACF,SAAO,MAAI,CAAC;EACd;AChLQ,UAAQ,AAAC,cAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,CAAA;ACAT,eAAoB,EAAA,SAAkB,CAAC;AAAvC,iBAAoB,EAAA,WAAkB,CAAC;AAAvC,SAAoB,EAAA,GAAkB,CAAC;AAAvC,aAAoB,EAAA,OAAkB,CAAC;AAAvC,UAAoB,EAAA,IAAkB,CAAC;AAAvC,gBAAoB,EAAA,UAAkB,CAAC;AAAvC,SAAoB,EAAA,GAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA;ACAT,kBAAoB,EAAA,YAAkB,CAAC;AAAvC,WAAoB,EAAA,KAAkB,CAAC;AAAvC,iBAAoB,EAAA,WAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA,CAAG;ACAZ,UAAoB,EAAA,IAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA;ACAT,gBAAoB,EAAA,UAAkB,CAAC;AAAvC,oBAAoB,EAAA,cAAkB,CAAC;AAAvC,oBAAoB,EAAA,cAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA,CAAG;ACAZ,sBAAoB,EAAA,gBAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA,CAAG;ACAZ,qBAAoB,EAAA,eAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA,CAAG;ACAZ,kBAAoB,EAAA,YAAkB,CAAC;IDE/B,CAFR,UAAS,CAAA,CAAG;ACAZ,qBAAoB,EAAA,eAAkB,CAAC;IDE/B,CDDuB;AACzB,UAAM;AGFZ,iBCAA,SAAS,QAAO;AACN,AAAI,UAAA,WN0Hd,SAAM,SAAO,CAEC,OAAM,CAAG;AACnB,aAAG,eAAe,EAAI,QAAM,CAAC;QM7HiB,AN8HhD,CM9HiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,YN8H5C,OAAM,CAAN,UAAQ,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AAC7E,eAAG,eAAe,AAAC,CAAC,MAAK,CAAG,QAAM,CAAG,QAAM,CAAC,CAAC;UAC/C,MM/HgE,SAAO,CAAC,CAAC;MACnE,AAAC,CNuHc,WAAU,CMvHN,CDJS,CAAA;AEApC,WAAK,eAAe,AAAC,0CACb,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAAC,kBP+HT,cAAa,IAAW,cAAa,IAAW,cAAa,GO/H7B;QAAC,CAAC,CAAC,CAAC;yBCD7B,CAAA,SAAQ,AAAC,wBFAjC,SAAS,QAAO;AACN,AAAI,UAAA,qBNoIP,SAAM,mBAAiB;ASrI9B,wBAAc,iBAAiB,AAAC,oBACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;QHAA,AN2IlD,CM3ImD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,sBNoI5C,OAAM,CAAN,UAAQ,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AAC7E,AAAI,cAAA,CAAA,YAAW,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAC,CAAC;AACpD,eAAI,UAAS,SAAS,AAAC,CAAC,YAAW,CAAG,kBAAgB,CAAC,CAAG;AACxD,oBAAM,gBAAgB,EAAI,MAAI,CAAC;YACjC;AAAA,UACF,MMxIgE,SAAO,CAAC,CAAC;MACnE,AAAC,CNiI+B,WAAU,CMjIvB,EEJ2C;ADAtE,WAAK,eAAe,AAAC,oDACb,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AAAC,kBPqIT,cAAa,IAAW,cAAa,IAAW,cAAa,GOrI7B;QAAC,CAAC,CAAC,CAAC;ILCtB;EAC3B,CAAA;AJDI,CAAC,CAAC;AE+KV","sourceRoot":"/Users/deast/Angular/angular/modules/core/test/compiler/pipeline/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'test_lib/test_lib';\nimport {ListWrapper, List, MapWrapper} from 'facade/collection';\nimport {DOM} from 'facade/dom';\nimport {isPresent, NumberWrapper, StringWrapper} from 'facade/lang';\n\nimport {CompilePipeline} from 'core/compiler/pipeline/compile_pipeline';\nimport {CompileElement} from 'core/compiler/pipeline/compile_element';\nimport {CompileStep} from 'core/compiler/pipeline/compile_step'\nimport {CompileControl} from 'core/compiler/pipeline/compile_control';\n\nexport function main() {\n  describe('compile_pipeline', () => {\n    describe('children compilation', () => {\n      it('should walk the tree in depth first order including template contents', () => {\n        var element = el('<div id=\"1\"><template id=\"2\"><span id=\"3\"></span></template></div>');\n\n        var step0Log = [];\n        var results = new CompilePipeline([createLoggerStep(step0Log)]).process(element);\n\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(resultIdLog(results)).toEqual(['1', '2', '3']);\n      });\n\n      it('should stop walking the tree when compileChildren is false', () => {\n        var element = el('<div id=\"1\"><template id=\"2\" ignore-children><span id=\"3\"></span></template></div>');\n\n        var step0Log = [];\n        var pipeline = new CompilePipeline([new IgnoreChildrenStep(), createLoggerStep(step0Log)]);\n        var results = pipeline.process(element);\n\n        expect(step0Log).toEqual(['1', '1<2']);\n        expect(resultIdLog(results)).toEqual(['1', '2']);\n      });\n    });\n\n    describe('control.addParent', () => {\n      it('should report the new parent to the following processor and the result', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createLoggerStep(step1Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', '2', '3']);\n      });\n\n      it('should allow to add a parent by multiple processors to the same element', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" wrap1=\"1\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var step2Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createWrapperStep('wrap1', step1Log),\n          createLoggerStep(step2Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(step2Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<wrap1#0', 'wrap1#0<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', 'wrap1#0', '2', '3']);\n      });\n\n      it('should allow to add a parent by multiple processors to different elements', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" id=\"2\"><b id=\"3\" wrap1=\"1\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var step2Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createWrapperStep('wrap1', step1Log),\n          createLoggerStep(step2Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(step2Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<wrap1#0', 'wrap1#0<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', '2', 'wrap1#0', '3']);\n      });\n\n      it('should allow to add multiple parents by the same processor', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"2\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createLoggerStep(step1Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<wrap0#1', 'wrap0#1<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', 'wrap0#1', '2', '3']);\n      });\n\n    });\n\n    describe('control.addChild', () => {\n      it('should report the new child to all processors and the result', () => {\n        var element = el('<div id=\"1\"><div id=\"2\"></div></div>');\n        var resultLog = [];\n        var newChild = new CompileElement(el('<div id=\"3\"></div>'));\n        var pipeline = new CompilePipeline([\n          new MockStep((parent, current, control) => {\n            if (StringWrapper.equals(current.element.id, '1')) {\n              control.addChild(newChild);\n            }\n          }),\n          createLoggerStep(resultLog)\n        ]);\n        var result = pipeline.process(element);\n        expect(result[2]).toBe(newChild);\n        expect(resultLog).toEqual(['1', '1<2', '1<3']);\n        expect(resultIdLog(result)).toEqual(['1', '2', '3']);\n      });\n    });\n\n  });\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n\nexport class IgnoreChildrenStep extends CompileStep {\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var attributeMap = DOM.attributeMap(current.element);\n    if (MapWrapper.contains(attributeMap, 'ignore-children')) {\n      current.compileChildren = false;\n    }\n  }\n}\n\nfunction logEntry(log, parent, current) {\n  var parentId = '';\n  if (isPresent(parent)) {\n    parentId = parent.element.getAttribute('id')+'<';\n  }\n  ListWrapper.push(log, parentId+current.element.getAttribute('id'));\n}\n\nfunction createLoggerStep(log) {\n  return new MockStep((parent, current, control) => {\n    logEntry(log, parent, current);\n  });\n}\n\nfunction createWrapperStep(wrapperId, log) {\n  var nextElementId = 0;\n  return new MockStep((parent, current, control) => {\n    var parentCountStr = current.element.getAttribute(wrapperId);\n    if (isPresent(parentCountStr)) {\n      var parentCount = NumberWrapper.parseInt(parentCountStr, 10);\n      while (parentCount > 0) {\n        control.addParent(new CompileElement(el(`<a id=\"${wrapperId}#${nextElementId++}\"></a>`)));\n        parentCount--;\n      }\n    }\n    logEntry(log, parent, current);\n  });\n}\n\nfunction resultIdLog(result) {\n  var idLog = [];\n  ListWrapper.forEach(result, (current) => {\n    logEntry(idLog, null, current);\n  });\n  return idLog;\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)"]}