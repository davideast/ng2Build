{"version":3,"file":"/Users/deast/Angular/angular/modules/core/test/compiler/pipeline/view_splitter_spec.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","view_splitter_spec.js","@traceur/generated/TemplateParser/22","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9"],"names":[],"mappings":"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","sourceRoot":"/Users/deast/Angular/angular/modules/core/test/compiler/pipeline/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'test_lib/test_lib';\nimport {isPresent} from 'facade/lang';\nimport {MapWrapper} from 'facade/collection';\n\nimport {ViewSplitter} from 'core/compiler/pipeline/view_splitter';\nimport {CompilePipeline} from 'core/compiler/pipeline/compile_pipeline';\nimport {DOM, TemplateElement} from 'facade/dom';\n\nimport {Lexer, Parser} from 'change_detection/change_detection';\n\nexport function main() {\n  describe('ViewSplitter', () => {\n\n    function createPipeline() {\n      return new CompilePipeline([new ViewSplitter(new Parser(new Lexer()), null)]);\n    }\n\n    it('should mark root elements as viewRoot', () => {\n      var rootElement = el('<div></div>');\n      var results = createPipeline().process(rootElement);\n      expect(results[0].isViewRoot).toBe(true);\n    });\n\n    describe('<template> elements', () => {\n\n      it('should move the content into a new <template> element and mark that as viewRoot', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(DOM.getOuterHTML(results[1].element)).toEqual('<template if=\"true\"></template>');\n        expect(results[1].isViewRoot).toBe(false);\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<template>a</template>');\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should not wrap a root <template> element', () => {\n        var rootElement = el('<div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toBe(1);\n        expect(DOM.getOuterHTML(rootElement)).toEqual('<div></div>');\n      });\n\n    });\n\n    describe('elements with template attribute', () => {\n\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span template=\"\"></span>')\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div template></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"prop:expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].propertyBindings, 'prop').source).toEqual('expr');\n      });\n\n      it('should add variable mappings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"varName #mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].variableBindings).toEqual(MapWrapper.createFromStringMap({'varName': 'mapName'}));\n      });\n\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div template=\"varname\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[1].attrs()).toEqual(MapWrapper.createFromStringMap({'varname': ''}));\n        expect(results[1].propertyBindings).toBe(null);\n        expect(results[1].variableBindings).toBe(null);\n      });\n\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div template></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        // 1 root + 2 initial + 1 generated template elements\n        expect(results.length).toEqual(4);\n      });\n\n    });\n\n  });\n}","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;"]}