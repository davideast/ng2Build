{"version":3,"file":"/Users/deast/Angular/angular/modules/test_lib/src/utils.js","sources":["@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/14","utils.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yCAAuC,UAAS,SAAQ;;ACAvE,AAAI,IAAA,CAAA,YAAW,mBAAoB,CAAC;;;;ACApC,OAAO;AACD,UAAM,GCDZ,SAAS,CAAA;ACAT,WAAoB,EAAA,KAAkB,CAAC;AAAvC,kBAAoB,EAAA,YAAkB,CAAC;IDE/B,CDDuB;AACzB,UAAM;UGFY,CAAA,SAAQ,AAAC,SCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,MCCP,SAAM,IAAE,CAGF,AAAC,CAAE;AACZ,aAAG,QAAQ,EAAI,GAAC,CAAC;QDL6B,ACMhD,CDNiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;ACO5C,YAAE,CAAF,UAAI,KAAI,CAAG;AACT,sBAAU,KAAK,AAAC,CAAC,IAAG,QAAQ,CAAG,MAAI,CAAC,CAAC;UACvC;AAEA,WAAC,CAAD,UAAG,KAAI;;AACL,mBAAO,SAAA,AAAC,CAAK;AACX,wBAAU,KAAK,AAAC,CAAC,YAAW,CAAG,MAAI,CAAC,CAAC;YACvC,EAAA;UACF;AAEA,eAAK,CAAL,UAAM,AAAC,CAAE;AACP,iBAAO,CAAA,WAAU,KAAK,AAAC,CAAC,IAAG,QAAQ,CAAG,KAAG,CAAC,CAAC;UAC7C;AAAA,aDlB8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;IHEvC;EAC3B,CAAA;AFDI,CAAC,CAAC;AOqBV","sourceRoot":"/Users/deast/Angular/angular/modules/test_lib/src/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function(m) {\n          $__placeholder__0\n        }","$__placeholder__0 = m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {List, ListWrapper} from 'facade/collection';\n\nexport class Log {\n  _result:List;\n\n  constructor() {\n    this._result = [];\n  }\n\n  add(value) {\n    ListWrapper.push(this._result, value);\n  }\n\n  fn(value) {\n    return () => {\n      ListWrapper.push(this._result, value);\n    }\n  }\n\n  result() {\n    return ListWrapper.join(this._result, \"; \");\n  }\n}\n"]}